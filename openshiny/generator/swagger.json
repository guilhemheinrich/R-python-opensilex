{
    "swagger": "2.0",
    "info": {
        "version": "BUILD-SNAPSHOT",
        "title": "OpenSilex API"
    },
    "tags": [
        {
            "name": "BRAPI"
        },
        {
            "name": "Annotations"
        },
        {
            "name": "Area"
        },
        {
            "name": "Data"
        },
        {
            "name": "Devices"
        },
        {
            "name": "Documents"
        },
        {
            "name": "Events"
        },
        {
            "name": "Experiments"
        },
        {
            "name": "Factors"
        },
        {
            "name": "Germplasm"
        },
        {
            "name": "Ontology"
        },
        {
            "name": "Organisations"
        },
        {
            "name": "Positions"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Scientific Objects"
        },
        {
            "name": "Species"
        },
        {
            "name": "System"
        },
        {
            "name": "Variables"
        },
        {
            "name": "Vue.js"
        },
        {
            "name": "Vue.js - Ontology extension"
        },
        {
            "name": "Mobile"
        },
        {
            "name": "Authentication"
        },
        {
            "name": "Security"
        }
    ],
    "paths": {
        "/brapi/v1/calls": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Check the available BrAPI calls",
                "description": "Check the available BrAPI calls",
                "operationId": "getCalls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "dataType",
                        "in": "query",
                        "description": "datatype",
                        "required": false,
                        "type": "string",
                        "x-example": "json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve BrAPI calls",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/germplasm": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Submit a search request for germplasm",
                "description": "",
                "operationId": "getGermplasmBySearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "germplasmDbId",
                        "in": "query",
                        "description": "Search by germplasmDbId",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "germplasmPUI",
                        "in": "query",
                        "description": "Search by germplasmPUI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "germplasmName",
                        "in": "query",
                        "description": "Search by germplasmName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commonCropName",
                        "in": "query",
                        "description": "Search by commonCropName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GermplasmDTO"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Retrieve studies information",
                "description": "Retrieve studies information",
                "operationId": "getStudies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "query",
                        "description": "Search by studyDbId",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter active status true/false",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Name of the field to sort by: studyDbId, active",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order direction - ASC or DESC",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve studies information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StudyDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies/{studyDbId}": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Retrieve study details",
                "description": "Retrieve study details",
                "operationId": "getStudyDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "path",
                        "description": "Search by studyDbId",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve study details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StudyDetailsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies/{studyDbId}/observations": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Get the observations associated to a specific study",
                "description": "Get the observations associated to a specific study",
                "operationId": "getObservations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "path",
                        "description": "studyDbId",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "observationVariableDbIds",
                        "in": "query",
                        "description": "observationVariableDbIds",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "pageSize",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObservationDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies/{studyDbId}/observationvariables": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "List all the observation variables measured in the study.",
                "description": "List all the observation variables measured in the study.",
                "operationId": "getObservationVariables",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "path",
                        "description": "studyDbId",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "pageSize",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObservationVariableDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies/{studyDbId}/observationunits": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "List all the observation units measured in the study.",
                "description": "List all the observation units measured in the study.",
                "operationId": "getObservationUnits",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "path",
                        "description": "studyDbId",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "observationLevel",
                        "in": "query",
                        "description": "observationLevel",
                        "required": false,
                        "type": "string",
                        "x-example": "Plot"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "pageSize",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObservationUnitDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/studies-search": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Retrieve studies information",
                "description": "Retrieve studies information",
                "operationId": "getStudiesSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studyDbId",
                        "in": "query",
                        "description": "Search by studyDbId",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter active status true/false",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Name of the field to sort by: studyDbId or seasonDbId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order direction - ASC or DESC",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "pageSize",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve studies information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StudyDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/variables": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Call to retrieve a list of observationVariables available in the system",
                "description": "retrieve variables information",
                "operationId": "getVariablesList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "observationVariableDbId",
                        "in": "query",
                        "description": "observationVariableDbId",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "pageSize",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "retrieve variables information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObservationVariableDTO"
                            }
                        }
                    }
                }
            }
        },
        "/brapi/v1/variables/{observationVariableDbId}": {
            "get": {
                "tags": [
                    "BRAPI"
                ],
                "summary": "Retrieve variable details by id",
                "description": "Retrieve variable details by id",
                "operationId": "getVariableDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "observationVariableDbId",
                        "in": "path",
                        "description": "A variable URI (Unique Resource Identifier)",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve variable details by id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObservationVariableDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/annotations/{uri}": {
            "get": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Get an annotation",
                "description": "",
                "operationId": "getAnnotation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Event URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annotation retrieved",
                        "schema": {
                            "$ref": "#/definitions/AnnotationGetDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown annotation URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Delete an annotation",
                "description": "",
                "operationId": "deleteAnnotation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Annotation URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annotation deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Annotation URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/annotations/motivations": {
            "get": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Search motivations",
                "description": "",
                "operationId": "searchMotivations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Motivation name regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "describing"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return motivations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MotivationGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/annotations": {
            "get": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Search annotations",
                "description": "",
                "operationId": "searchAnnotations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "The pest attack"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Target URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/demo/2018/o18000076"
                    },
                    {
                        "name": "motivation",
                        "in": "query",
                        "description": "Motivation URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.w3.org/ns/oa#describing"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Author URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/users#Admin.OpenSilex"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "author=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return annotations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnnotationGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Create an annotation",
                "description": "",
                "operationId": "createAnnotation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnnotationCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An annotation is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An annotation with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Update an annotation",
                "description": "",
                "operationId": "updateAnnotation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Annotation description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnnotationUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annotation created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown annotation URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/annotations/count": {
            "get": {
                "tags": [
                    "Annotations"
                ],
                "summary": "Count annotations",
                "description": "",
                "operationId": "countAnnotations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Target URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/demo/2018/o18000076"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the number of annotations associated to a given target",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/core/area/{uri}": {
            "get": {
                "tags": [
                    "Area"
                ],
                "summary": "Get an area",
                "description": "",
                "operationId": "getByURI",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "area URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return area",
                        "schema": {
                            "$ref": "#/definitions/AreaGetDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Area not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Area"
                ],
                "summary": "Delete an area",
                "description": "",
                "operationId": "deleteArea",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Area URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete an area",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "The URI for the area was not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/area": {
            "post": {
                "tags": [
                    "Area"
                ],
                "summary": "Add an area",
                "description": "",
                "operationId": "createArea",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Area description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AreaCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Add an area",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "An area with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Area"
                ],
                "summary": "Update an area",
                "description": "",
                "operationId": "updateArea",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Area description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AreaUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update an area",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/area/intersects": {
            "post": {
                "tags": [
                    "Area"
                ],
                "summary": "Get area whose geometry corresponds to the Intersections",
                "description": "",
                "operationId": "searchIntersects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "geometry GeoJSON",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GeoJsonObject"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start date : match temporal area after the given start date",
                        "required": false,
                        "type": "string",
                        "x-example": "2019-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "End date : match temporal area before the given end date",
                        "required": false,
                        "type": "string",
                        "x-example": "2021-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get area whose geometry corresponds to the Intersections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AreaGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Area not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/data": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Search data",
                "description": "",
                "operationId": "searchDataList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 1.0
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenances",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "date=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Add data",
                "description": "",
                "operationId": "addListData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data description",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataCreationDTO"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Add data",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Data"
                ],
                "summary": "Update data",
                "description": "",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DataUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Confidence update",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data"
                ],
                "summary": "Delete data on criteria",
                "description": "",
                "operationId": "deleteDataOnSearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiment uri",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Search by target uri",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variable",
                        "in": "query",
                        "description": "Search by variable uri",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Search by provenance uri",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Data URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/data/{uri}": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get data",
                "description": "",
                "operationId": "getData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Data URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved",
                        "schema": {
                            "$ref": "#/definitions/DataGetDTO"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data"
                ],
                "summary": "Delete data",
                "description": "",
                "operationId": "deleteData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Data URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/data/1598857852858"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Data URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/data/import_validation": {
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Import a CSV file for the given provenanceURI.",
                "description": "",
                "operationId": "validateCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/provenance/provenancelabel"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data are validated",
                        "schema": {
                            "$ref": "#/definitions/DataCSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/data/count": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Count data",
                "description": "",
                "operationId": "countData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by target uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 1.0
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenances",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the number of data ",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/core/data/{uri}/confidence": {
            "put": {
                "tags": [
                    "Data"
                ],
                "summary": "Update confidence index",
                "description": "",
                "operationId": "updateConfidence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DataConfidenceDTO"
                        }
                    },
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Data URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Confidence update",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/data/export": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Export data",
                "description": "",
                "operationId": "exportData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenances",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Format wide or long",
                        "required": false,
                        "type": "string",
                        "default": "wide",
                        "x-example": "wide"
                    },
                    {
                        "name": "with_raw_data",
                        "in": "query",
                        "description": "Export also raw_data",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with data list results in wide or long format"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/data/provenances": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get provenances linked to data",
                "description": "",
                "operationId": "getUsedProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/data/import": {
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Import a CSV file for the given provenanceURI",
                "description": "",
                "operationId": "importCSVData",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/provenance/provenancelabel"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data are imported",
                        "schema": {
                            "$ref": "#/definitions/DataCSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/data/variables": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get variables linked to data",
                "description": "",
                "operationId": "getUsedVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenance uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/datafiles": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Search data files",
                "description": "",
                "operationId": "getDataFileDescriptionsBySearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Search by rdf type uri",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiments",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets uris list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenance uris list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "date=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve file descriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataFileGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Add a data file",
                "description": "{\"rdf_type\":\"http://www.opensilex.org/vocabulary/oeso#Image\", \"date\":\"2020-08-21T00:00:00+01:00\", \"target\":\"http://plot01\", \"provenance\": { \"uri\":\"http://opensilex.dev/provenance/1598001689415\" }, \"metadata\":{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}}",
                "operationId": "postDataFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "File description with metadata",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Data file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file and metadata saved",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/datafiles/provenances": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get provenances linked to datafiles",
                "description": "",
                "operationId": "getDatafilesProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiments",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "devices",
                        "in": "query",
                        "description": "Search by devices uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/datafiles/{uri}/thumbnail": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a picture thumbnail",
                "description": "",
                "operationId": "getPicturesThumbnails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Search by fileUri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "scaled_width",
                        "in": "query",
                        "description": "Thumbnail width",
                        "required": false,
                        "type": "integer",
                        "default": 640,
                        "maximum": 1920,
                        "minimum": 256,
                        "format": "int32"
                    },
                    {
                        "name": "scaled_height",
                        "in": "query",
                        "description": "Thumbnail height",
                        "required": false,
                        "type": "integer",
                        "default": 360,
                        "maximum": 1080,
                        "minimum": 144,
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve thumbnail of a picture"
                    },
                    "400": {
                        "description": "Error while building the thumbnail, this error can occur when the file requested is not an image"
                    },
                    "404": {
                        "description": "the image has not been found"
                    }
                }
            }
        },
        "/core/datafiles/description": {
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Describe datafiles and give their relative paths in the configured storage system. In the case of already stored datafiles.",
                "description": "",
                "operationId": "postDataFilePaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Metadata of the file",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataFilePathCreationDTO"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file(s) metadata(s) saved",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/datafiles/{uri}": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a data file",
                "description": "",
                "operationId": "getDataFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Search by fileUri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve file"
                    }
                }
            }
        },
        "/core/datafiles/{uri}/description": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a data file description",
                "description": "",
                "operationId": "getDataFileDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Search by fileUri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve file description",
                        "schema": {
                            "$ref": "#/definitions/DataFileGetDTO"
                        }
                    }
                }
            }
        },
        "/core/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Search devices",
                "description": "",
                "operationId": "searchDevices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type filter",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "vocabulary:SensingDevice"
                    },
                    {
                        "name": "include_subtypes",
                        "in": "query",
                        "description": "Set this param to true when filtering on rdf_type to also retrieve sub-types",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Search by year",
                        "required": false,
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 999,
                        "format": "int32",
                        "x-example": 2017
                    },
                    {
                        "name": "existence_date",
                        "in": "query",
                        "description": "Date to filter device existence",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Regex pattern for filtering by brand",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Regex pattern for filtering by model",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "serial_number",
                        "in": "query",
                        "description": "Regex pattern for filtering by serial number",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"Group\" : \"weather station\",\n\"Group2\" : \"A\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return devices corresponding to the given search parameters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "Create a device",
                "description": "",
                "operationId": "createDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Device description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceCreationDTO"
                        }
                    },
                    {
                        "name": "checkOnly",
                        "in": "query",
                        "description": "Checking only",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-example": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A device is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A device with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "summary": "Update a device",
                "description": "",
                "operationId": "updateDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Device description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/devices/{uri}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get device detail",
                "description": "",
                "operationId": "getDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return device details corresponding to the device URI",
                        "schema": {
                            "$ref": "#/definitions/DeviceGetDetailsDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "summary": "Delete a device",
                "description": "",
                "operationId": "deleteDevice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Device URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/devices/by_uris": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get devices by uris",
                "description": "",
                "operationId": "getDeviceByUris",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Device URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return devices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeviceGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Device not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/devices/{uri}/data": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Search device data",
                "description": "",
                "operationId": "searchDeviceData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "variable",
                        "in": "query",
                        "description": "Search by variables",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Search by provenance uri",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/devices/{uri}/data/count": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Count device data",
                "description": "",
                "operationId": "countDeviceData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiment uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "variable",
                        "in": "query",
                        "description": "Search by variables",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Search by provenance uri",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the number of data",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/devices/{uri}/datafiles": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Search device datafiles descriptions",
                "description": "",
                "operationId": "searchDeviceDatafiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Search by rdf type uri",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiments",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "scientific_objects",
                        "in": "query",
                        "description": "Search by object uris list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenance uris list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return datafiles list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/devices/{uri}/variables": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get variables linked to the device",
                "description": "",
                "operationId": "getDeviceVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/device/sensingdevice-sensor_01"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NamedResourceDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/devices/{uri}/data/provenances": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get provenances of data that have been measured on this device",
                "description": "",
                "operationId": "getDeviceDataProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/devices/{uri}/datafiles/provenances": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "Get provenances of datafiles linked to this device",
                "description": "",
                "operationId": "getDeviceDataFilesProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Device URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/devices/export": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "summary": "export devices",
                "description": "",
                "operationId": "exportDevices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type filter",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "vocabulary:SensingDevice"
                    },
                    {
                        "name": "include_subtypes",
                        "in": "query",
                        "description": "Set this param to true when filtering on rdf_type to also retrieve sub-types",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Search by year",
                        "required": false,
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 999,
                        "format": "int32",
                        "x-example": 2017
                    },
                    {
                        "name": "existence_date",
                        "in": "query",
                        "description": "Date to filter device existence",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Regex pattern for filtering by brand",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Regex pattern for filtering by model",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "serial_number",
                        "in": "query",
                        "description": "Regex pattern for filtering by serial number",
                        "required": false,
                        "type": "string",
                        "x-example": ".*"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"Group\" : \"weather station\",\n\"Group2\" : \"A\"}"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with device list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/devices/export_by_uris": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "summary": "export devices",
                "description": "",
                "operationId": "exportList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of device URI",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/URIsListPostDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with device list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Search documents",
                "description": "",
                "operationId": "searchDocuments",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Search by type",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/vocabulary/oeso#ScientificDocument"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Regex pattern for filtering list by title",
                        "required": false,
                        "type": "string",
                        "x-example": "experimental_protocol_3"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Regex pattern for filtering list by date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020"
                    },
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Search by targets",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "dev-expe:za17"
                    },
                    {
                        "name": "authors",
                        "in": "query",
                        "description": "Regex pattern for filtering list by author",
                        "required": false,
                        "type": "string",
                        "x-example": "Firstname Lastname"
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Regex pattern for filtering list by keyword",
                        "required": false,
                        "type": "string",
                        "x-example": "keyword"
                    },
                    {
                        "name": "multiple",
                        "in": "query",
                        "description": "Regex pattern for filtering list by keyword or title",
                        "required": false,
                        "type": "string",
                        "x-example": "keyword or title"
                    },
                    {
                        "name": "deprecated",
                        "in": "query",
                        "description": "Search deprecated file",
                        "required": false,
                        "type": "string",
                        "x-example": "true"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldTitle=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "date=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Document list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DocumentGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Add a document",
                "description": "{ uri: http://opensilex.dev/set/documents#ProtocolExperimental, identifier: doi:10.1340/309registries, rdf_type: http://www.opensilex.org/vocabulary/oeso#ScientificDocument, title: title, date: 2020-06-01, description: description, targets: http://opensilex.dev/opensilex/id/variables/v001, authors: Author name, language: fr, format: jpg, deprecated: false, keywords: keywords}",
                "operationId": "createDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "File description with metadata",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Document Inserted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A document with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update document's description",
                "description": "",
                "operationId": "updateDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document's metadata updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Document URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/documents/{uri}/description": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document's description",
                "description": "",
                "operationId": "getDocumentMetadata",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Document URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/documents/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document retrieved",
                        "schema": {
                            "$ref": "#/definitions/DocumentGetDTO"
                        }
                    },
                    "404": {
                        "description": "Document URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/documents/{uri}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document",
                "description": "",
                "operationId": "getDocumentFile",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Document URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/documents/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document retrieved"
                    },
                    "404": {
                        "description": "Document URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document",
                "description": "",
                "operationId": "deleteDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Document URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Document URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/{uri}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get an event",
                "description": "",
                "operationId": "getEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Event URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/events/1865162374"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved",
                        "schema": {
                            "$ref": "#/definitions/EventGetDTO"
                        }
                    },
                    "404": {
                        "description": "Event URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "description": "",
                "operationId": "deleteEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Event URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/events/deplacement/1865162374"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Event URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Search events",
                "description": "",
                "operationId": "searchEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Event type",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/vocabulary/oeev#MoveFrom"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start date : match event after the given start date",
                        "required": false,
                        "type": "string",
                        "x-example": "2019-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "End date : match event before the given end date",
                        "required": false,
                        "type": "string",
                        "x-example": "2021-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Target partial/exact URI",
                        "required": false,
                        "type": "string",
                        "x-example": "http://www.opensilex.org/demo/2018/o18000076(exact match) or o18000076(partial match)"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "The pest attack"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "end=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "end=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return event list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a list of event",
                "description": "",
                "operationId": "createEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EventCreationDTO"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a list of event",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An event with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "description": "",
                "operationId": "updateEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Event description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return updated event",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Event URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/import": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Import a CSV file with one move and one target per line",
                "description": "",
                "operationId": "importEventCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Event file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Move file saved",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    },
                    "409": {
                        "description": "A move with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/import_validation": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Check a CSV file with one move and one target per line",
                "description": "",
                "operationId": "validateEventCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Event file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event file checked",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/events/{uri}/details": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get an event with all it's properties",
                "description": "",
                "operationId": "getEventDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Event URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/events/1865162374"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved",
                        "schema": {
                            "$ref": "#/definitions/EventDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Event URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/moves": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a list of move event",
                "description": "",
                "operationId": "createMoves",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MoveCreationDTO"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a list of move",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A move with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update a move event",
                "description": "",
                "operationId": "updateMoveEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Event description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MoveUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return updated move",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Move URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/moves/import": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Import a CSV file with one move and one target per line",
                "description": "",
                "operationId": "importMoveCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Move file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Move file saved",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    },
                    "409": {
                        "description": "A move with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/moves/import_validation": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Check a CSV file with one move and one target per line",
                "description": "",
                "operationId": "validateMoveCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Move file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event file checked",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/events/moves/{uri}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a move with all it's properties",
                "description": "",
                "operationId": "getMoveEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Move URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/events/1865162374"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Move retrieved",
                        "schema": {
                            "$ref": "#/definitions/MoveDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Move URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete a move event",
                "description": "",
                "operationId": "deleteMoveEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Event URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/events/deplacement/1865162374"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Move deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Move URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/events/count": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Count events",
                "description": "",
                "operationId": "countEvents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "targets",
                        "in": "query",
                        "description": "Targets URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the number of events associated to targets",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get an experiment",
                "description": "",
                "operationId": "getExperiment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment retrieved",
                        "schema": {
                            "$ref": "#/definitions/ExperimentGetDTO"
                        }
                    },
                    "404": {
                        "description": "Experiment URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Delete an experiment",
                "description": "",
                "operationId": "deleteExperiment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Experiment URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/data/import_validation": {
            "post": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Import a CSV file for the given experiment URI and scientific object type.",
                "description": "",
                "operationId": "validateCSV_1",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/provenance/provenancelabel"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Data file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file and metadata saved",
                        "schema": {
                            "$ref": "#/definitions/DataCSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/experiments": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Search experiments",
                "description": "",
                "operationId": "searchExperiments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string",
                        "x-example": "ZA17"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Search by year",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 2017
                    },
                    {
                        "name": "is_ended",
                        "in": "query",
                        "description": "Search ended(false) or active experiments(true)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Search by involved species",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://www.phenome-fppn.fr/id/species/zeamays"
                    },
                    {
                        "name": "factors",
                        "in": "query",
                        "description": "Search by studied effect",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://purl.obolibrary.org/obo/CHEBI_25555"
                    },
                    {
                        "name": "projects",
                        "in": "query",
                        "description": "Search by related project uri",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://www.phenome-fppn.fr/projects/ZA17\nhttp://www.phenome-fppn.fr/id/projects/ZA18"
                    },
                    {
                        "name": "is_public",
                        "in": "query",
                        "description": "Search private(false) or public experiments(true)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return experiments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentGetListDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Add an experiment",
                "description": "",
                "operationId": "createExperiment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Experiment description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExperimentCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An experiment is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An experiment with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Update an experiment",
                "description": "",
                "operationId": "updateExperiment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Experiment description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExperimentCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Experiment URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/species": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get species present in an experiment",
                "description": "",
                "operationId": "getAvailableSpecies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Species list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpeciesDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/factors": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get factors with their levels associated to an experiment",
                "description": "",
                "operationId": "getAvailableFactors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return factors list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorDetailsGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/data": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Search data",
                "description": "",
                "operationId": "searchExperimentDataList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "scientific_objects",
                        "in": "query",
                        "description": "Search by objects",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "provenances",
                        "in": "query",
                        "description": "Search by provenance uri",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/experiments/{uri}/data/export": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "export experiment data",
                "description": "",
                "operationId": "exportExperimentDataList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21T00:00:00+01:00"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-09-21T00:00:00+01:00"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Precise the timezone corresponding to the given dates",
                        "required": false,
                        "type": "string",
                        "x-example": "Europe/Paris"
                    },
                    {
                        "name": "scientific_objects",
                        "in": "query",
                        "description": "Search by objects",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "variables",
                        "in": "query",
                        "description": "Search by variables",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6"
                    },
                    {
                        "name": "min_confidence",
                        "in": "query",
                        "description": "Search by minimal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "max_confidence",
                        "in": "query",
                        "description": "Search by maximal confidence index",
                        "required": false,
                        "type": "number",
                        "maximum": 1,
                        "minimum": 0,
                        "format": "float",
                        "x-example": 0.5
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Search by provenance uri",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/provenance/1598001689415"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Format wide or long",
                        "required": false,
                        "type": "string",
                        "default": "wide",
                        "x-example": "wide"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with data list results in wide or long format"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/experiments/{uri}/data/import": {
            "post": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Import a CSV file for the given experiment URI and scientific object type.",
                "description": "",
                "operationId": "importCSVData_1",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "provenance",
                        "in": "query",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/provenance/provenancelabel"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Data file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file and metadata saved",
                        "schema": {
                            "$ref": "#/definitions/DataCSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/available_facilities": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get facilities available for an experiment",
                "description": "",
                "operationId": "getAvailableFacilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return facilities list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InfrastructureFacilityGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/{uri}/variables": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get variables involved in an experiment",
                "description": "",
                "operationId": "getUsedVariables_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "scientific_objects",
                        "in": "query",
                        "description": "Search by objects uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "http://opensilex.dev/opensilex/2020/o20000345"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NamedResourceDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/experiments/{uri}/provenances": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get provenances involved in an experiment",
                "description": "",
                "operationId": "searchExperimentProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Experiment URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Search by description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "Search by activity URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "activity_type",
                        "in": "query",
                        "description": "Search by activity type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "Search by agent URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "agent_type",
                        "in": "query",
                        "description": "Search by agent type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/experiments/by_uris": {
            "get": {
                "tags": [
                    "Experiments"
                ],
                "summary": "Get experiments URIs",
                "description": "",
                "operationId": "getExperimentsByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Experiments URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return experiments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentGetListDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Experiment not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/{uri}/levels": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get factor levels",
                "description": "",
                "operationId": "getFactorLevels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "platform-factor:irrigation"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorLevelGetDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Factor not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Search factors",
                "description": "",
                "operationId": "searchFactors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering on name",
                        "required": false,
                        "type": "string",
                        "x-example": "irrigation"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Regex pattern for filtering on description",
                        "required": false,
                        "type": "string",
                        "x-example": "20ml of water"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category of a factor",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://aims.fao.org/aos/agrovoc/c_32668"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Filter by experiment",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "demo-exp:experiment1"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return factor list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Experiment URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Factors"
                ],
                "summary": "Create a factor",
                "description": "",
                "operationId": "createFactor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Factor description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FactorCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Factors"
                ],
                "summary": "Update a factor",
                "description": "",
                "operationId": "updateFactor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Factor description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FactorUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Experiment URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/{uri}": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get a factor",
                "description": "",
                "operationId": "getFactorByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "platform-factor:irrigation"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor retrieved",
                        "schema": {
                            "$ref": "#/definitions/FactorDetailsGetDTO"
                        }
                    },
                    "404": {
                        "description": "Factor not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Factors"
                ],
                "summary": "Delete a factor",
                "description": "",
                "operationId": "deleteFactor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "platform-factor:irrigation"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Factor URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/{uri}/experiments": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get factor associated experiments",
                "description": "",
                "operationId": "getFactorAssociatedExperiments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "platform-factor:irrigation"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiments retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentGetListDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Factor not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/factor_levels": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Search factors levels",
                "description": "",
                "operationId": "searchFactorLevels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering on name",
                        "required": false,
                        "type": "string",
                        "x-example": "WW"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "name=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return factor list with their levels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorDetailsGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/by_uris": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get a list of factors by their URIs",
                "description": "",
                "operationId": "getFactorsByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Factors URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return factors list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Factor not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/categories": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Search categories",
                "description": "",
                "operationId": "searchCategories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category name regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "describing"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "name=asc"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorCategoryGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/levels/{uri}": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get a factor level",
                "description": "",
                "operationId": "getFactorLevel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor Level URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/factorLevel/irrigation.ww"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor level retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorLevelGetDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Factor level not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Factors"
                ],
                "summary": "Delete a factor level",
                "description": "",
                "operationId": "deleteFactorLevel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor level URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "platform-factor:irrigation"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor level deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Factor URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/experiments/factors/levels/{uri}/details": {
            "get": {
                "tags": [
                    "Factors"
                ],
                "summary": "Get a factor level",
                "description": "",
                "operationId": "getFactorLevelDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Factor Level URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/factorLevel/irrigation.ww"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Factor level retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorLevelGetDetailDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Factor level not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/germplasm": {
            "get": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Search germplasm",
                "description": "",
                "operationId": "searchGermplasm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Regex pattern for filtering list by uri",
                        "required": false,
                        "type": "string",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Search by type",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/vocabulary/oeso#Variety"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering list by name and synonyms",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Regex pattern for filtering list by code",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "production_year",
                        "in": "query",
                        "description": "Search by production year",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 2020
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Search by species",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.phenome-fppn.fr/id/species/zeamays"
                    },
                    {
                        "name": "variety",
                        "in": "query",
                        "description": "Search by variety",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "accession",
                        "in": "query",
                        "description": "Search by accession",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "institute",
                        "in": "query",
                        "description": "Search by institute",
                        "required": false,
                        "type": "string",
                        "x-example": "INRA"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiment",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"water_stress\" : \"resistant\",\n\"yield\" : \"moderate\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "label=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return germplasm list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GermplasmGetAllDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Add a germplasm",
                "description": "",
                "operationId": "createGermplasm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Germplasm description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GermplasmCreationDTO"
                        }
                    },
                    {
                        "name": "checkOnly",
                        "in": "query",
                        "description": "Checking only",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-example": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Add a germplasm (variety, accession, plantMaterialLot)",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "A germplasm with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Update a germplasm",
                "description": "",
                "operationId": "updateGermplasm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Germplasm description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GermplasmUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Germplasm updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Germplasm URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/germplasm/{uri}": {
            "get": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Get a germplasm",
                "description": "",
                "operationId": "getGermplasm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "germplasm URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.phenome-fppn.fr/id/species/zeamays"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return germplasm",
                        "schema": {
                            "$ref": "#/definitions/GermplasmGetSingleDTO"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Germplasm not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Delete a germplasm",
                "description": "",
                "operationId": "deleteGermplasm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Germplasm URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/core/germplasm/by_uris": {
            "get": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Get a list of germplasms by their URIs",
                "description": "",
                "operationId": "getGermplasmsByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Germplasms URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return factors list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GermplasmGetAllDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Germplasm not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/germplasm/{uri}/experiments": {
            "get": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "Get experiments where a germplasm has been used",
                "description": "",
                "operationId": "getGermplasmExperiments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "germplasm URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "dev-germplasm:g01"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering experiments by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "name=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return germplasm",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentGetListDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Germplasm not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/germplasm/export": {
            "get": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "export germplasm",
                "description": "",
                "operationId": "exportGermplasm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Regex pattern for filtering list by uri",
                        "required": false,
                        "type": "string",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Search by type",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/vocabulary/oeso#Variety"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering list by name and synonyms",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Regex pattern for filtering list by code",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "production_year",
                        "in": "query",
                        "description": "Search by productionYear",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 2020
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Search by species",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.phenome-fppn.fr/id/species/zeamays"
                    },
                    {
                        "name": "variety",
                        "in": "query",
                        "description": "Search by variety",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "accession",
                        "in": "query",
                        "description": "Search by accession",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "institute",
                        "in": "query",
                        "description": "Search by institute",
                        "required": false,
                        "type": "string",
                        "x-example": "INRA"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Search by experiment",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "Search by metadata",
                        "required": false,
                        "type": "string",
                        "x-example": "{ \"water_stress\" : \"resistant\",\n\"yield\" : \"moderate\"}"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "name=asc"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with germplasm list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/germplasm/export_by_uris": {
            "post": {
                "tags": [
                    "Germplasm"
                ],
                "summary": "export germplasm by list of uris",
                "description": "",
                "operationId": "exportGermplasmByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of germplasm URI",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/URIsListPostDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with germplasm list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/ontology/property": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Return property model definition detail",
                "description": "",
                "operationId": "getProperty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "Property URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "Property type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "domain_rdf_type",
                        "in": "query",
                        "description": "Property type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return property model definition ",
                        "schema": {
                            "$ref": "#/definitions/RDFPropertyDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Create a RDF property",
                "description": "",
                "operationId": "createProperty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Property description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RDFPropertyDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a RDF property",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A property with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Update a RDF property",
                "description": "",
                "operationId": "updateProperty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Property description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RDFPropertyDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update a RDF property",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Delete a property",
                "description": "",
                "operationId": "deleteProperty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "propertyURI",
                        "in": "query",
                        "description": "Property URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "propertyType",
                        "in": "query",
                        "description": "Property type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property deleted ",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/ontology/rdf_types": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Return classes models definitions with properties for a list of rdf types",
                "description": "",
                "operationId": "getClasses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF classes URI",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "parent_type",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return classes models definitions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RDFTypeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/properties": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Search properties tree",
                "description": "",
                "operationId": "getProperties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return property tree",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceTreeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/subclasses_of": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Search sub-classes tree of an RDF class",
                "description": "",
                "operationId": "getSubClassesOf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parent_type",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "ignoreRootClasses",
                        "in": "query",
                        "description": "Flag to determine if only sub-classes must be include in result",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return sub-classes tree",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceTreeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/rdf_type": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Return class model definition with properties",
                "description": "",
                "operationId": "getRDFType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "parent_type",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return class model definition ",
                        "schema": {
                            "$ref": "#/definitions/RDFTypeDTO"
                        }
                    }
                }
            }
        },
        "/ontology/object_properties": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Search object properties tree",
                "description": "",
                "operationId": "getObjectProperties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return object property tree",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceTreeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/rdf_type_property_restriction": {
            "post": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Add a rdf type property restriction",
                "description": "",
                "operationId": "addClassPropertyRestriction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Property description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OWLClassPropertyRestrictionDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class property restriction added",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Update a rdf type property restriction",
                "description": "",
                "operationId": "updateClassPropertyRestriction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Property description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OWLClassPropertyRestrictionDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class property restriction updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Delete a rdf type property restriction",
                "description": "",
                "operationId": "deleteClassPropertyRestriction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "propertyURI",
                        "in": "query",
                        "description": "Property URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class property restriction deleted ",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/ontology/uri_label": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Return associated rdfs:label of an uri if exists",
                "description": "",
                "operationId": "getURILabel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "URI to get label from",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return URI label",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ontology/check_rdf_types": {
            "post": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Check the given rdf-types on the given uris",
                "description": "",
                "operationId": "checkURIsTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "URIs list",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/URIsListPostDTO"
                        }
                    },
                    {
                        "name": "rdf_types",
                        "in": "query",
                        "description": "rdf_types list you want to check on the given uris list",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the URIs with the checked rdf:types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/URITypesDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/data_properties": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Search data properties tree",
                "description": "",
                "operationId": "getDataProperties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data property tree",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceTreeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/ontology/uris_labels": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Return associated rdfs:label of uris if they exist",
                "description": "",
                "operationId": "getURILabelsList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "URIs to get label from",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "Context URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return URI label",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ontology/subclasses_of/search": {
            "get": {
                "tags": [
                    "Ontology"
                ],
                "summary": "Search sub-classes tree of an RDF class",
                "description": "",
                "operationId": "searchSubClassesOf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parent_type",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "plant_height"
                    },
                    {
                        "name": "ignoreRootClasses",
                        "in": "query",
                        "description": "Flag to determine if only sub-classes must be include in result",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return sub-classes tree",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceTreeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/organisations": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Search organisations",
                "description": "",
                "operationId": "searchInfrastructures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pattern",
                        "in": "query",
                        "description": "Regex pattern for filtering list by names",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "organisation_uris",
                        "in": "query",
                        "description": " organisation URIs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return organisations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceDagDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Create an organisation",
                "description": "",
                "operationId": "createInfrastructure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Organisation description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create an organisation",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An organisation with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Update an organisation",
                "description": "",
                "operationId": "updateInfrastructure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Organisation description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return updated organisation",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Organisation URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/organisations/{uri}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get an organisation ",
                "description": "",
                "operationId": "getInfrastructure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Organisation URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/organisation/phenoarch"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation retrieved",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureGetDTO"
                        }
                    },
                    "404": {
                        "description": "Organisation URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Delete an organisation",
                "description": "",
                "operationId": "deleteInfrastructure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Organisation URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Organisation URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/facilities": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Search facilities",
                "description": "",
                "operationId": "searchInfrastructureFacilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pattern",
                        "in": "query",
                        "description": "Regex pattern for filtering facilities by names",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "organizations",
                        "in": "query",
                        "description": "List of organizations hosted by the facilities to filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return facilities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Create a facility",
                "description": "",
                "operationId": "createInfrastructureFacility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Facility description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureFacilityCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a facility",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A facility with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Update a facility",
                "description": "",
                "operationId": "updateInfrastructureFacility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Facility description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureFacilityUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return updated facility",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Facility URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/facilities/all_facilities": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get all facilities",
                "description": "",
                "operationId": "getAllFacilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NamedResourceDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Facility URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/facilities/{uri}": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get a facility",
                "description": "",
                "operationId": "getInfrastructureFacility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "facility URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/organisations/facility/phenoarch"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility retrieved",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureFacilityGetDTO"
                        }
                    },
                    "404": {
                        "description": "Facility URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Delete a facility",
                "description": "",
                "operationId": "deleteInfrastructureFacility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Facility URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Facility URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/facilities/by_uris": {
            "get": {
                "tags": [
                    "Organisations"
                ],
                "summary": "Get facilities by their URIs",
                "description": "",
                "operationId": "getFacilitiesByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Facilities URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return facilities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Facility not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/positions/history": {
            "get": {
                "tags": [
                    "Positions"
                ],
                "summary": "Search history of position of an object",
                "description": "",
                "operationId": "searchPositionHistory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Target URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://www.opensilex.org/demo/2018/o18000076"
                    },
                    {
                        "name": "startDateTime",
                        "in": "query",
                        "description": "Start date : match position affected after the given start date",
                        "required": false,
                        "type": "string",
                        "x-example": "2019-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "endDateTime",
                        "in": "query",
                        "description": "End date : match position affected before the given end date",
                        "required": false,
                        "type": "string",
                        "x-example": "2021-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return position list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PositionGetDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/positions/{uri}": {
            "get": {
                "tags": [
                    "Positions"
                ],
                "summary": "Get the position of an object",
                "description": "",
                "operationId": "getPosition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/plant/plant5841"
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "Time : match position at the given time",
                        "required": false,
                        "type": "string",
                        "x-example": "2019-09-08T12:00:00+01:00"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position retrieved",
                        "schema": {
                            "$ref": "#/definitions/PositionGetDTO"
                        }
                    },
                    "404": {
                        "description": "No position found for this object",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/projects/{uri}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a project",
                "description": "",
                "operationId": "getProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Project URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project retrieved",
                        "schema": {
                            "$ref": "#/definitions/ProjectGetDetailDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown Project URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "description": "",
                "operationId": "deleteProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Project URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/project/BW1"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown Project URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Search projects",
                "description": "",
                "operationId": "searchProjects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name or shortname",
                        "required": false,
                        "type": "string",
                        "x-example": "PJ17"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Search by year",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 2017
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Regex pattern for filtering on description or objective",
                        "required": false,
                        "type": "string",
                        "x-example": "climate"
                    },
                    {
                        "name": "financial_funding",
                        "in": "query",
                        "description": "Regex pattern for filtering by financial funding",
                        "required": false,
                        "type": "string",
                        "x-example": "ANR"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Add a project",
                "description": "",
                "operationId": "createProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A project is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A project with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "description": "",
                "operationId": "updateProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown Project URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/projects/by_uris": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get projects by their URIs",
                "description": "",
                "operationId": "getProjectsByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Projects URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Project not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/provenances/{uri}": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a provenance",
                "description": "",
                "operationId": "getProvenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provenance retrieved",
                        "schema": {
                            "$ref": "#/definitions/ProvenanceGetDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Data"
                ],
                "summary": "Delete a provenance that doesn't describe data",
                "description": "",
                "operationId": "deleteProvenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Provenance URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/id/provenance/provenancelabel"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provenance deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/provenances": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get provenances",
                "description": "",
                "operationId": "searchProvenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Search by description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "Search by activity URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "activity_type",
                        "in": "query",
                        "description": "Search by activity type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "Search by agent URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "agent_type",
                        "in": "query",
                        "description": "Search by agent type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "date=desc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Data"
                ],
                "summary": "Add a provenance",
                "description": "",
                "operationId": "createProvenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Provenance description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProvenanceCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A provenance is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A provenance with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Data"
                ],
                "summary": "Update a provenance",
                "description": "",
                "operationId": "updateProvenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Provenance description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProvenanceUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Provenance updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/provenances/by_uris": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a list of provenances by their URIs",
                "description": "",
                "operationId": "getProvenancesByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Provenances URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenancess list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Provenance not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/import_validation": {
            "post": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Validate a CSV file for the given experiment URI and scientific object type.",
                "description": "",
                "operationId": "validateCSV_2",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "File description with metadata",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Data file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CSV validation errors or a validation token used for CSV import",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/export": {
            "post": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Export a given list of scientific object URIs to csv data file",
                "description": "",
                "operationId": "exportCSV",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CSV export configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ScientificObjectSearchDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file exported"
                    }
                }
            }
        },
        "/core/scientific_objects/{uri}": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get scientific object detail",
                "description": "",
                "operationId": "getScientificObjectDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "scientific object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/set/scientific-objects/so-1357dz_pg_34zm4384wwveg_323_37arch2017-03-30"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/set/experiments/21ik1_cims-on"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return scientific object details corresponding to the given object URI",
                        "schema": {
                            "$ref": "#/definitions/ScientificObjectDetailDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Delete a scientific object",
                "description": "",
                "operationId": "deleteScientificObject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "scientific object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scientific object deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Scientific object URI not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/{uri}/experiments": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get scientific object detail for each experiments, a null value for experiment in response means a properties defined outside of any experiment (shared object).",
                "description": "",
                "operationId": "getScientificObjectDetailByExperiments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "scientific object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return scientific object details corresponding to the given experiment and object URI",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScientificObjectDetailByExperimentsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/scientific_objects": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Search list of scientific objects",
                "description": "",
                "operationId": "searchScientificObjects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "rdf_types",
                        "in": "query",
                        "description": "RDF type filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "vocabulary:Plant"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "germplasm",
                        "in": "query",
                        "description": "Germplasm URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://aims.fao.org/aos/agrovoc/c_1066"
                    },
                    {
                        "name": "factor_levels",
                        "in": "query",
                        "description": "Factor levels URI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "vocabulary:IrrigationStress"
                    },
                    {
                        "name": "facility",
                        "in": "query",
                        "description": "Facility",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "diaphen:serre-2"
                    },
                    {
                        "name": "existence_date",
                        "in": "query",
                        "description": "Date to filter object existence",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "creation_date",
                        "in": "query",
                        "description": "Date to filter object creation",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return scientific objects corresponding to the given search parameters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScientificObjectNodeDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Create a scientific object for the given experiment",
                "description": "",
                "operationId": "createScientificObject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Scientific object description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScientificObjectCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a scientific object",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A scientific object with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Update a scientific object for the given experiment",
                "description": "",
                "operationId": "updateScientificObject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Scientific object description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScientificObjectUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scientific object updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/import": {
            "post": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Import a CSV file for the given experiment URI and scientific object type.",
                "description": "",
                "operationId": "importCSV",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "File description with metadata",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Data file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data file and metadata saved",
                        "schema": {
                            "$ref": "#/definitions/CSVValidationDTO"
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/{uri}/variables": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get variables measured on this scientific object",
                "description": "",
                "operationId": "getScientificObjectVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Scientific Object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NamedResourceDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/scientific_objects/{uri}/data/provenances": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get provenances of data that have been measured on this scientific object",
                "description": "",
                "operationId": "getScientificObjectDataProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Scientific Object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/scientific_objects/{uri}/datafiles/provenances": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get provenances of datafiles linked to this scientific object",
                "description": "",
                "operationId": "getScientificObjectDataFilesProvenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Scientific Object URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return provenances list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProvenanceGetDTO"
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/core/scientific_objects/geometry": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get scientific objet list with geometry of a given experiment URI",
                "description": "",
                "operationId": "searchScientificObjectsWithGeometryListByUris",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Context URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Search by minimal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-21"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Search by maximal date",
                        "required": false,
                        "type": "string",
                        "x-example": "2020-08-22"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of scientific objects whose geometry corresponds to the given experiment URI",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScientificObjectNodeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/children": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get list of scientific object children",
                "description": "",
                "operationId": "getScientificObjectsChildren",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent object URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.org/id/Plot 12"
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "rdf_types",
                        "in": "query",
                        "description": "RDF type filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "vocabulary:Plant"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "factor_levels",
                        "in": "query",
                        "description": "Factor levels URI",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi",
                        "x-example": "vocabulary:IrrigationStress"
                    },
                    {
                        "name": "facility",
                        "in": "query",
                        "description": "Facility",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "diaphen:serre-2"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "name=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of scientific objects children corresponding to the parent URI",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScientificObjectNodeWithChildrenDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/by_uris": {
            "post": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "Get scientific objet list of a given experiment URI",
                "description": "",
                "operationId": "getScientificObjectsListByUris",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Scientific object uris",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of scientific objects corresponding to the given experiment URI",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScientificObjectNodeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/scientific_objects/used_types": {
            "get": {
                "tags": [
                    "Scientific Objects"
                ],
                "summary": "get used scientific object types",
                "description": "",
                "operationId": "getUsedTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment URI",
                        "required": false,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex/set/experiments/ZA17"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return scientific object types list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ListItemDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/species": {
            "get": {
                "tags": [
                    "Species"
                ],
                "summary": "get species (no pagination)",
                "description": "",
                "operationId": "getAllSpecies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Species list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpeciesDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/system/info": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "get system information",
                "description": "",
                "operationId": "getVersionInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return API version info",
                        "schema": {
                            "$ref": "#/definitions/VersionInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search variables by name, long name, entity, characteristic, method or unit name",
                "description": "The following fields could be used for sorting : \n\n _entity_name/entityName : the name of the variable entity\n\n _characteristic_name/characteristicName : the name of the variable characteristic\n\n _method_name/methodName : the name of the variable method\n\n _unit_name/unitName : the name of the variable unit\n\n",
                "operationId": "searchVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "plant_height"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariableGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add a variable",
                "description": "",
                "operationId": "createVariable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Variable description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VariableCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A variable is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A Variable with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update a variable",
                "description": "",
                "operationId": "updateVariable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Variable description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VariableUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variable updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown variable URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get a variable",
                "description": "",
                "operationId": "getVariable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Variable URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/Plant_Height"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variable retrieved",
                        "schema": {
                            "$ref": "#/definitions/VariableDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown variable URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete a variable",
                "description": "",
                "operationId": "deleteVariable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Variable URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/Plant_Height"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variable deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown variable URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables/details": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search detailed variables by name, long name, entity, characteristic, method or unit name",
                "description": "The following fields could be used for sorting : \n\n _entity_name : the name of the variable entity\n\n _characteristic_name : the name of the variable characteristic\n\n _method_name : the name of the variable method\n\n _unit_name : the name of the variable unit\n\n",
                "operationId": "searchVariablesDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name regex pattern",
                        "required": false,
                        "type": "string",
                        "x-example": "plant_height"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return detailed variables",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariableDetailsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/variables/datatypes": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get variables datatypes",
                "description": "",
                "operationId": "getDatatypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return data types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariableDatatypeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/core/variables/by_uris": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get detailed variables by uris",
                "description": "",
                "operationId": "getVariablesByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Variables URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariableDetailsDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Variable not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/variables/export_classic_by_uris": {
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "export variable by list of uris",
                "description": "",
                "operationId": "classicExportVariableByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of variable URI",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/URIsListPostDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with variable list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/variables/export_details_by_uris": {
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "export detailed variable by list of uris",
                "description": "",
                "operationId": "detailsExportVariableByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of variable URI",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/URIsListPostDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a csv file with detailed variable list"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/core/characteristics/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get a characteristic",
                "description": "",
                "operationId": "getCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Characteristic URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/characteristic/Height"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Characteristic retrieved",
                        "schema": {
                            "$ref": "#/definitions/CharacteristicDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown characteristic URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete a characteristic",
                "description": "",
                "operationId": "deleteCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Characteristic URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/characteristic/Height"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Characteristic deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown characteristic URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/characteristics": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search characteristics by name",
                "description": "",
                "operationId": "searchCharacteristics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "Height"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return characteristic list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CharacteristicGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add a characteristic",
                "description": "",
                "operationId": "createCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Characteristic description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CharacteristicCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A characteristic is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A characteristic with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update a characteristic",
                "description": "",
                "operationId": "updateCharacteristic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Characteristic description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CharacteristicUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Characteristic updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown characteristic URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/entities": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search entities by name",
                "description": "",
                "operationId": "searchEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "plant"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return entities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntityGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add an entity",
                "description": "",
                "operationId": "createEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Entity description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An entity is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An entity with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update an entity",
                "description": "",
                "operationId": "updateEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Entity description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown entity URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/entities/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get an entity",
                "description": "",
                "operationId": "getEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Entity URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/entity/Plant"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity retrieved",
                        "schema": {
                            "$ref": "#/definitions/EntityDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown entity URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete an entity",
                "description": "",
                "operationId": "deleteEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Entity URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/entity/Plant"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown entity URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/entities_of_interest": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search entities of interest by name",
                "description": "",
                "operationId": "searchInterestEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "plot"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return entities of interest",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InterestEntityGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add an entity of interest",
                "description": "",
                "operationId": "createInterestEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Entity of interest description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InterestEntityCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An entity of interest is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An entity of interest with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update an entity of interest",
                "description": "",
                "operationId": "updateInterestEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Entity of interest description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InterestEntityUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity of interest updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown entity of interest URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/entities_of_interest/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get an entity of interest",
                "description": "",
                "operationId": "getInterestEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Entity of interest URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity of interest retrieved",
                        "schema": {
                            "$ref": "#/definitions/InterestEntityDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown entity of interest URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete an entity of interest",
                "description": "",
                "operationId": "deleteInterestEntity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Entity of interest URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity of interest deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown entity of interest URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/methods/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get a method",
                "description": "",
                "operationId": "getMethod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Method URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Method retrieved",
                        "schema": {
                            "$ref": "#/definitions/MethodDetailsDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete a method",
                "description": "",
                "operationId": "deleteMethod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Method URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Method deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown method URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/methods": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search methods by name",
                "description": "",
                "operationId": "searchMethods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "ImageAnalysis"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return methods",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MethodGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add a method",
                "description": "",
                "operationId": "createMethod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Method description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MethodCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A method is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A method with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update a method",
                "description": "",
                "operationId": "updateMethod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Method description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MethodUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Method updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown method URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/units/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get an unit",
                "description": "",
                "operationId": "getUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Unit URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/unit/Centimeter"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit retrieved",
                        "schema": {
                            "$ref": "#/definitions/UnitDetailsDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown unit URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete an unit",
                "description": "",
                "operationId": "deleteUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Unit URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://opensilex.dev/set/variables/unit/Centimeter"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown unit URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/units": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search units by name",
                "description": "",
                "operationId": "searchUnits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name (regex)",
                        "required": false,
                        "type": "string",
                        "x-example": "Centimeter"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Unit list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnitGetDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add an unit",
                "description": "",
                "operationId": "createUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Unit description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UnitCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An unit is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "An unit with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update an unit",
                "description": "",
                "operationId": "updateUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Unit description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UnitUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown unit URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables_group": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Search variables groups",
                "description": "",
                "operationId": "searchVariablesGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering by name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variableUri",
                        "in": "query",
                        "description": "Variable URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "name=asc"
                        },
                        "collectionFormat": "multi",
                        "x-example": "uri=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariablesGroupGetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Variables"
                ],
                "summary": "Add a variables group",
                "description": "",
                "operationId": "createVariablesGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Variables group description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VariablesGroupCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A variables group is created",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A variables group with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variables"
                ],
                "summary": "Update a variables group",
                "description": "",
                "operationId": "updateVariablesGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Variables group description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VariablesGroupUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variables group updated",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown variables group URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables_group/{uri}": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get a variables group",
                "description": "",
                "operationId": "getVariablesGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Variables group URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variables group retrieved",
                        "schema": {
                            "$ref": "#/definitions/VariablesGroupGetDTO"
                        }
                    },
                    "404": {
                        "description": "Unknown variables group URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variables"
                ],
                "summary": "Delete a variables group",
                "description": "",
                "operationId": "deleteVariablesGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Variables group URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variables group deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown variables group URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/core/variables_group/by_uris": {
            "get": {
                "tags": [
                    "Variables"
                ],
                "summary": "Get variables groups by their URIs",
                "description": "",
                "operationId": "getVariablesGroupByURIs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Variables group URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return variables groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VariablesGroupGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Variables group not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/vuejs/extension/js/{module}.js": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the front Vue JS extension file to include",
                "description": "",
                "operationId": "getExtension",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "opensilex"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the extension file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/vuejs/config": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the current configuration",
                "description": "",
                "operationId": "getConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Front application configuration",
                        "schema": {
                            "$ref": "#/definitions/FrontConfigDTO"
                        }
                    }
                }
            }
        },
        "/vuejs/extension/css/{module}.css": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the front Vue JS extension css file to include",
                "description": "",
                "operationId": "getExtensionStyle",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "opensilex"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the extension css file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/vuejs/theme/{moduleId}/{themeId}/config": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the front Vue JS theme configuration",
                "description": "",
                "operationId": "getThemeConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "opensilex-front"
                    },
                    {
                        "name": "themeId",
                        "in": "path",
                        "description": "Theme identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "phis"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the theme configuration",
                        "schema": {
                            "$ref": "#/definitions/ThemeConfigDTO"
                        }
                    }
                }
            }
        },
        "/vuejs/theme/{moduleId}/{themeId}/style.css": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the theme css file",
                "description": "",
                "operationId": "getThemeCss",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "opensilex-front"
                    },
                    {
                        "name": "themeId",
                        "in": "path",
                        "description": "Theme identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "phis"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the theme css file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/vuejs/theme/{moduleId}/{themeId}/resource": {
            "get": {
                "tags": [
                    "Vue.js"
                ],
                "summary": "Return the theme requested resource",
                "description": "",
                "operationId": "getThemeResource",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "opensilex-front"
                    },
                    {
                        "name": "themeId",
                        "in": "path",
                        "description": "Theme identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "([a-zA-Z0-9-]+$)",
                        "x-example": "phis"
                    },
                    {
                        "name": "filePath",
                        "in": "query",
                        "description": "Resource path",
                        "required": false,
                        "type": "string",
                        "x-example": "images/opensilex.png"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the resource",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/rdf_type": {
            "get": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Return rdf type model definition with properties",
                "description": "",
                "operationId": "getRDFType_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "parentType",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return class model definition ",
                        "schema": {
                            "$ref": "#/definitions/VueRDFTypeDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Create a custom class",
                "description": "",
                "operationId": "createRDFType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Class description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VueRDFTypeDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a custom class",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "409": {
                        "description": "A class with the same URI already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Update a custom class",
                "description": "",
                "operationId": "updateRDFType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "RDF type definition",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VueRDFTypeDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update a RDF property",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Delete a RDF type",
                "description": "",
                "operationId": "deleteRDFType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type",
                        "required": false,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class deleted ",
                        "schema": {
                            "$ref": "#/definitions/RDFPropertyDTO"
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/data_types": {
            "get": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Return literal datatypes definition",
                "description": "",
                "operationId": "getDataTypes_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return literal datatypes definition ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VueDataTypeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/properties_order": {
            "put": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Define properties order",
                "description": "",
                "operationId": "setRDFTypePropertiesOrder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF type",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Array of properties",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Define properties order",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/rdf_type_properties": {
            "get": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Return class model properties definitions",
                "description": "",
                "operationId": "getRDFTypeProperties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rdf_type",
                        "in": "query",
                        "description": "RDF class URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "parent_type",
                        "in": "query",
                        "description": "Parent RDF class URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return class model properties definitions ",
                        "schema": {
                            "$ref": "#/definitions/VueRDFTypeDTO"
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/object_types": {
            "get": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Return object types definition",
                "description": "",
                "operationId": "getObjectTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return object types definition ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VueObjectTypeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/vuejs/owl_extension/rdf_types_parameters": {
            "get": {
                "tags": [
                    "Vue.js - Ontology extension"
                ],
                "summary": "Return RDF types parameters for Vue.js application",
                "description": "",
                "operationId": "getRDFTypesParameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return rdf types parameters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VueRDFTypeParameterDTO"
                            }
                        }
                    }
                }
            }
        },
        "/mobile": {
            "get": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Search forms",
                "description": "",
                "operationId": "searchFormList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Search by uris",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "date=desc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return form list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FormGetDTO"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Update form",
                "description": "",
                "operationId": "update_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Form description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FormUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Confidence update",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mobile/forms": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Add a form",
                "description": "",
                "operationId": "createForm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Form to save",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FormCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Add a form",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Bad user request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mobile/{uri}": {
            "delete": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Delete form",
                "description": "",
                "operationId": "deleteForm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Form URI",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form deleted",
                        "schema": {
                            "$ref": "#/definitions/ObjectUriResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or unknown Form URI",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout by discarding a user token",
                "description": "",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User sucessfully logout"
                    }
                }
            }
        },
        "/security/renew-token": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send back a new token if the provided one is still valid",
                "description": "",
                "operationId": "renewToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token sucessfully renewed",
                        "schema": {
                            "$ref": "#/definitions/TokenGetDTO"
                        }
                    }
                }
            }
        },
        "/security/authenticate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user and return an access token",
                "description": "",
                "operationId": "authenticate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User authentication informations",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AuthenticationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User sucessfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/TokenGetDTO"
                        }
                    },
                    "403": {
                        "description": "Invalid credentials (user does not exists or invalid password)",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/security/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send an e-mail confirmation",
                "description": "",
                "operationId": "forgotPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "User e-mail or uri",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sucessfully sent"
                    },
                    "400": {
                        "description": "Email not send"
                    }
                }
            }
        },
        "/security/renew-password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user password",
                "description": "",
                "operationId": "renewPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "renew_token",
                        "in": "query",
                        "description": "User renew token",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "name": "check_only",
                        "in": "query",
                        "description": "Check only renew token",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-example": false
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User password",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password sucessfully renewed",
                        "schema": {
                            "$ref": "#/definitions/TokenGetDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid password",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/credentials": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get list of existing credentials indexed by Swagger @API concepts in the application",
                "description": "",
                "operationId": "getCredentialsGroups",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of existing credentials by group in the application",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CredentialsGroupDTO"
                            }
                        }
                    }
                }
            }
        },
        "/security/openid": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user and return an access token",
                "description": "",
                "operationId": "authenticateOpenID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Authorization code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User sucessfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/TokenGetDTO"
                        }
                    },
                    "403": {
                        "description": "Invalid credentials (Bad token provided)",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/security/groups": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Search groups",
                "description": "",
                "operationId": "searchGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering list by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "email=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Add a group",
                "description": "",
                "operationId": "createGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Group description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A group is created"
                    }
                }
            },
            "put": {
                "tags": [
                    "Security"
                ],
                "summary": "Update a group",
                "description": "",
                "operationId": "updateGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Group description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GroupUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    }
                }
            }
        },
        "/security/groups/{uri}": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get a group",
                "description": "",
                "operationId": "getGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Group URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "dev-groups:admin_group"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group retrieved",
                        "schema": {
                            "$ref": "#/definitions/GroupDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Security"
                ],
                "summary": "Delete a group",
                "description": "",
                "operationId": "deleteGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Group URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/security/groups/by_uris": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get groups by their URIs",
                "description": "",
                "operationId": "getGroupsByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Groups URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Group not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/security/profiles/{uri}": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get a profile",
                "description": "",
                "operationId": "getProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Profile URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "dev-users:Admin_OpenSilex"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile retrieved",
                        "schema": {
                            "$ref": "#/definitions/ProfileGetDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Security"
                ],
                "summary": "Delete a profile",
                "description": "",
                "operationId": "deleteProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "Profile URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/security/profiles": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Search profiles",
                "description": "",
                "operationId": "searchProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering list by name",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "email=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return profiles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Add a profile",
                "description": "",
                "operationId": "createProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Profile description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProfileCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A profile is created"
                    },
                    "403": {
                        "description": "This current user can't create profiles"
                    },
                    "409": {
                        "description": "The profile name already exists"
                    }
                }
            },
            "put": {
                "tags": [
                    "Security"
                ],
                "summary": "Update a profile",
                "description": "",
                "operationId": "updateProfile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Profile description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProfileUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return profile uri of the updated profile",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    }
                }
            }
        },
        "/security/profiles/all": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get all profiles",
                "description": "",
                "operationId": "getAllProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "email=asc"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all profiles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/security/users": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Search users",
                "description": "",
                "operationId": "searchUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Regex pattern for filtering list by name or email",
                        "required": false,
                        "type": "string",
                        "default": ".*",
                        "x-example": ".*"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "List of fields to sort as an array of fieldName=asc|desc",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-example": "email=asc"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 0
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "default": 20,
                        "minimum": 0,
                        "format": "int32",
                        "x-example": 20
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Add an user",
                "description": "",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserCreationDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A user is created"
                    },
                    "403": {
                        "description": "This current user can't create other users with given parameters"
                    },
                    "409": {
                        "description": "The user already exists (duplicate email)"
                    }
                }
            },
            "put": {
                "tags": [
                    "Security"
                ],
                "summary": "Update an user",
                "description": "",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateDTO"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters"
                    }
                }
            }
        },
        "/security/users/{uri}": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get an user",
                "description": "",
                "operationId": "getUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "User URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "dev-users:Admin_OpenSilex"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved",
                        "schema": {
                            "$ref": "#/definitions/UserGetDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Security"
                ],
                "summary": "Delete an user",
                "description": "",
                "operationId": "deleteUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "User URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/security/users/by_uris": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get users by their URIs",
                "description": "",
                "operationId": "getUsersByURI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uris",
                        "in": "query",
                        "description": "Users URIs",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserGetDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    },
                    "404": {
                        "description": "Users not found (if any provided URIs is not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        },
        "/security/users/{uri}/groups": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Get groups of an user",
                "description": "",
                "operationId": "getUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "path",
                        "description": "User URI",
                        "required": true,
                        "type": "string",
                        "format": "uri",
                        "x-example": "http://example.com/"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Request accepted language",
                        "required": false,
                        "type": "string",
                        "x-example": "en"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return user's  groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NamedResourceDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/ErrorDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Call": {
            "type": "object",
            "properties": {
                "call": {
                    "type": "string"
                },
                "dataTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GermplasmDTO": {
            "type": "object",
            "properties": {
                "accessionNumber": {
                    "type": "string"
                },
                "acquisitionDate": {
                    "type": "string"
                },
                "additionalInfo": {
                    "type": "string"
                },
                "biologicalStatusOfAccessionCode": {
                    "type": "string"
                },
                "biologicalStatusOfAccessionDescription": {
                    "type": "string"
                },
                "breedingMethodDbId": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "commonCropName": {
                    "type": "string"
                },
                "countryOfOriginCode": {
                    "type": "string"
                },
                "defaultDisplayName": {
                    "type": "string"
                },
                "documentationURL": {
                    "type": "string"
                },
                "donors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "genus": {
                    "type": "string"
                },
                "germplasmDbId": {
                    "type": "string"
                },
                "germplasmName": {
                    "type": "string"
                },
                "germplasmOrigin": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "germplasmPreprocessing": {
                    "type": "string"
                },
                "instituteCode": {
                    "type": "string"
                },
                "instituteName": {
                    "type": "string"
                },
                "pedigree": {
                    "type": "string"
                },
                "seedSource": {
                    "type": "string"
                },
                "seedSourceDescription": {
                    "type": "string"
                },
                "species": {
                    "type": "string"
                },
                "speciesAuthority": {
                    "type": "string"
                },
                "storageTypes": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "subtaxa": {
                    "type": "string"
                },
                "subtaxaAuthority": {
                    "type": "string"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "taxonIds": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ErrorDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "example": "Error",
                    "description": "Title of the error"
                },
                "message": {
                    "type": "string",
                    "example": "Unexpected error",
                    "description": "Message of the error"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/MetadataDTO"
                },
                "result": {
                    "$ref": "#/definitions/ErrorDTO"
                }
            }
        },
        "Level": {
            "type": "object",
            "properties": {
                "levelInt": {
                    "type": "integer",
                    "format": "int32"
                },
                "levelStr": {
                    "type": "string"
                }
            }
        },
        "MetadataDTO": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/PaginationDTO"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StatusDTO"
                    }
                },
                "datafiles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "PaginationDTO": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int64"
                },
                "currentPage": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "StatusDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "messageType": {
                    "$ref": "#/definitions/Level"
                }
            }
        },
        "Season": {
            "type": "object",
            "properties": {
                "season": {
                    "type": "string"
                },
                "seasonDbId": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "StudyDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "additionalInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "commonCropName": {
                    "type": "string"
                },
                "documentationURL": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "locationDbId": {
                    "type": "string"
                },
                "locationName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "programDbId": {
                    "type": "string"
                },
                "programName": {
                    "type": "string"
                },
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Season"
                    }
                },
                "startDate": {
                    "type": "string"
                },
                "studyDbId": {
                    "type": "string"
                },
                "studyName": {
                    "type": "string"
                },
                "studyType": {
                    "type": "string"
                },
                "studyTypeDbId": {
                    "type": "string"
                },
                "studyTypeName": {
                    "type": "string"
                },
                "trialDbId": {
                    "type": "string"
                },
                "trialName": {
                    "type": "string"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "contactDbId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "institutionName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "DataLink": {
            "type": "object",
            "properties": {
                "dataLinkName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object"
        },
        "StudyDetailsDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "string"
                },
                "additionalInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "commonCropName": {
                    "type": "string"
                },
                "documentationURL": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "locationDbId": {
                    "type": "string"
                },
                "locationName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "programDbId": {
                    "type": "string"
                },
                "programName": {
                    "type": "string"
                },
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Season"
                    }
                },
                "startDate": {
                    "type": "string"
                },
                "studyDbId": {
                    "type": "string"
                },
                "studyName": {
                    "type": "string"
                },
                "studyType": {
                    "type": "string"
                },
                "studyTypeDbId": {
                    "type": "string"
                },
                "studyTypeName": {
                    "type": "string"
                },
                "trialDbId": {
                    "type": "string"
                },
                "trialName": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                },
                "datalinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataLink"
                    }
                },
                "location": {
                    "$ref": "#/definitions/Location"
                }
            }
        },
        "ObservationDTO": {
            "type": "object",
            "properties": {
                "germplasmDbId": {
                    "type": "string"
                },
                "germplasmName": {
                    "type": "string"
                },
                "observationDbId": {
                    "type": "string"
                },
                "observationLevel": {
                    "type": "string"
                },
                "observationTimeStamp": {
                    "type": "string"
                },
                "observationUnitDbId": {
                    "type": "string"
                },
                "observationUnitName": {
                    "type": "string"
                },
                "observationVariableDbId": {
                    "type": "string"
                },
                "observationVariableName": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "season": {
                    "$ref": "#/definitions/Season"
                },
                "studyDbId": {
                    "type": "string"
                },
                "uploadedBy": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DocumentationLink": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Method": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "formula": {
                    "type": "string"
                },
                "methodDbId": {
                    "type": "string"
                },
                "methodName": {
                    "type": "string"
                },
                "ontologyReference": {
                    "$ref": "#/definitions/OntologyReference"
                },
                "reference": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                }
            }
        },
        "ObservationVariableDTO": {
            "type": "object",
            "properties": {
                "observationVariableDbId": {
                    "type": "string"
                },
                "observationVariableName": {
                    "type": "string"
                },
                "ontologyReference": {
                    "type": "string"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contextOfUse": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "growthStage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "xref": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "scientist": {
                    "type": "string"
                },
                "submissionTimesTamp": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "crop": {
                    "type": "string"
                },
                "trait": {
                    "$ref": "#/definitions/Trait"
                },
                "method": {
                    "$ref": "#/definitions/Method"
                },
                "scale": {
                    "$ref": "#/definitions/Scale"
                },
                "defaultValue": {
                    "type": "string"
                },
                "documentationURL": {
                    "type": "string"
                }
            }
        },
        "OntologyReference": {
            "type": "object",
            "properties": {
                "documentationLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentationLink"
                    }
                },
                "ontologyDbId": {
                    "type": "string"
                },
                "ontologyName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Scale": {
            "type": "object",
            "properties": {
                "dataType": {
                    "type": "string"
                },
                "decimalPlaces": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ontologyReference": {
                    "$ref": "#/definitions/OntologyReference"
                },
                "scaleDbId": {
                    "type": "string"
                },
                "scaleName": {
                    "type": "string"
                },
                "validValues": {
                    "type": "string"
                },
                "xref": {
                    "type": "string"
                }
            }
        },
        "Trait": {
            "type": "object",
            "properties": {
                "alternativeAbbreviations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "attribute": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "entity": {
                    "type": "string"
                },
                "mainAbbreviation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ontologyReference": {
                    "$ref": "#/definitions/OntologyReference"
                },
                "status": {
                    "type": "string"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "traitDbId": {
                    "type": "string"
                },
                "traitName": {
                    "type": "string"
                },
                "xref": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                }
            }
        },
        "ObservationSummary": {
            "type": "object",
            "properties": {
                "collector": {
                    "type": "string"
                },
                "observationDbId": {
                    "type": "string"
                },
                "observationTimeStamp": {
                    "type": "string"
                },
                "observationVariableDbId": {
                    "type": "string"
                },
                "observationVariableName": {
                    "type": "string"
                },
                "season": {
                    "$ref": "#/definitions/Season"
                }
            }
        },
        "ObservationTreatment": {
            "type": "object",
            "properties": {
                "factor": {
                    "type": "string"
                },
                "modality": {
                    "type": "string"
                }
            }
        },
        "ObservationUnitDTO": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "string"
                },
                "entryNumber": {
                    "type": "string"
                },
                "entryType": {
                    "type": "string"
                },
                "germplasmDbId": {
                    "type": "string"
                },
                "germplasmName": {
                    "type": "string"
                },
                "observationLevel": {
                    "type": "string"
                },
                "observationLevels": {
                    "type": "string"
                },
                "observationUnitDbId": {
                    "type": "string"
                },
                "observationUnitXref": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservationUnitXref"
                    }
                },
                "observations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservationSummary"
                    }
                },
                "plantNumber": {
                    "type": "string"
                },
                "plotNumber": {
                    "type": "string"
                },
                "positionCoordinateX": {
                    "type": "string"
                },
                "positionCoordinateXType": {
                    "type": "string"
                },
                "positionCoordinateY": {
                    "type": "string"
                },
                "positionCoordinateYType": {
                    "type": "string"
                },
                "programName": {
                    "type": "string"
                },
                "replicate": {
                    "type": "string"
                },
                "studyDbId": {
                    "type": "string"
                },
                "studyLocation": {
                    "type": "string"
                },
                "studyLocationDbId": {
                    "type": "string"
                },
                "studyName": {
                    "type": "string"
                },
                "treatments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObservationTreatment"
                    }
                }
            }
        },
        "ObservationUnitXref": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "AnnotationGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415",
                    "description": "Annotation URI"
                },
                "description": {
                    "type": "string",
                    "example": "The pest attack lasted 20 minutes",
                    "description": "Content of the annotation"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "motivation": {
                    "$ref": "#/definitions/MotivationGetDTO"
                },
                "created": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "Creation date"
                },
                "author": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "Annotation author URI"
                }
            }
        },
        "MotivationGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/ns/oa#describing",
                    "description": "URI of the motivation"
                },
                "name": {
                    "type": "string",
                    "example": "describing",
                    "description": "Name of the annotation motivation"
                }
            }
        },
        "ObjectUriResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/MetadataDTO"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "AnnotationCreationDTO": {
            "type": "object",
            "required": [
                "description",
                "motivation",
                "targets"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415"
                },
                "description": {
                    "type": "string",
                    "example": "The pest attack lasted 20 minutes"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "motivation": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/ns/oa#describing"
                }
            }
        },
        "AnnotationUpdateDTO": {
            "type": "object",
            "required": [
                "description",
                "motivation",
                "targets",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/annotations/12590c87-1c34-426b-a231-beb7acb33415"
                },
                "description": {
                    "type": "string",
                    "example": "The pest attack lasted 20 minutes"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "motivation": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/ns/oa#describing"
                }
            }
        },
        "AreaGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "author": {
                    "type": "string",
                    "format": "uri"
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "Crs": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "name",
                        "link"
                    ]
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "Feature": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        },
                        "geometry": {
                            "$ref": "#/definitions/GeoJsonObject"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FeatureCollection": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "features": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature"
                            }
                        }
                    }
                }
            ]
        },
        "GeoJsonObject": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Feature",
                        "Polygon",
                        "MultiPolygon",
                        "FeatureCollection",
                        "Point",
                        "MultiPoint",
                        "MultiLineString",
                        "LineString",
                        "GeometryCollection"
                    ]
                },
                "bbox": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "crs": {
                    "type": "Crs"
                },
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "geometry": {
                    "type": "GeoJsonObject"
                }
            },
            "example": {
                "coordinates": [
                    43.618316,
                    3.856912
                ],
                "type": "Point"
            }
        },
        "GeometryCollection": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "geometries": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GeoJsonObject"
                            }
                        }
                    }
                }
            ]
        },
        "LineString": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LngLatAlt"
                            }
                        }
                    }
                }
            ]
        },
        "LngLatAlt": {
            "type": "object",
            "properties": {
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "altitude": {
                    "type": "number",
                    "format": "double"
                },
                "additionalElements": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                }
            }
        },
        "MultiLineString": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/LngLatAlt"
                                }
                            }
                        }
                    }
                }
            ]
        },
        "MultiPoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LngLatAlt"
                            }
                        }
                    }
                }
            ]
        },
        "MultiPolygon": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LngLatAlt"
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        },
        "Point": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "$ref": "#/definitions/LngLatAlt"
                        }
                    }
                }
            ]
        },
        "Polygon": {
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/LngLatAlt"
                                }
                            }
                        }
                    }
                }
            ]
        },
        "AreaCreationDTO": {
            "type": "object",
            "required": [
                "geometry",
                "name",
                "rdf_type"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/area/Z_001",
                    "description": "Area URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:WindyArea",
                    "description": "Area rdf_type"
                },
                "name": {
                    "type": "string",
                    "example": "Z_001",
                    "description": "Area name"
                },
                "description": {
                    "type": "string",
                    "example": "Protocol n°1289 - Amount of water 5 ml/Days.",
                    "description": "Description of the area"
                },
                "geometry": {
                    "description": "The geographical coordinates of the area",
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "AreaUpdateDTO": {
            "type": "object",
            "required": [
                "geometry",
                "name",
                "rdf_type",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/area/Z_001",
                    "description": "Area URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:WindyArea",
                    "description": "Area rdf_type"
                },
                "name": {
                    "type": "string",
                    "example": "Z_001",
                    "description": "Area name"
                },
                "description": {
                    "type": "string",
                    "example": "Protocol n°1289 - Amount of water 5 ml/Days.",
                    "description": "Description of the area"
                },
                "geometry": {
                    "description": "The geographical coordinates of the area",
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "DataProvenanceModel": {
            "type": "object",
            "required": [
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/id/provenance/provenancelabel",
                    "description": "provenance uri"
                },
                "prov_used": {
                    "type": "array",
                    "description": "list of inputs of the process described in the provenance",
                    "items": {
                        "$ref": "#/definitions/ProvEntityModel"
                    }
                },
                "prov_was_associated_with": {
                    "type": "array",
                    "description": "allow an activity to be linked to an agent",
                    "items": {
                        "$ref": "#/definitions/ProvEntityModel"
                    }
                },
                "settings": {
                    "type": "object",
                    "description": "a key-value system to store specific information",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "experiments": {
                    "type": "array",
                    "description": "experiments uris on which the data has been produced",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "DataUpdateDTO": {
            "type": "object",
            "required": [
                "date",
                "provenance",
                "uri",
                "value",
                "variable"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/id/data/1598857852858",
                    "description": "URI of the data being updated"
                },
                "date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "date or datetime"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "target": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://plot01",
                    "description": "target URI on which the data have been collected (e.g. a scientific object)"
                },
                "variable": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6",
                    "description": "variable URI"
                },
                "value": {
                    "type": "object",
                    "example": "8.6",
                    "description": "can be decimal, integer, boolean, string or date"
                },
                "confidence": {
                    "type": "number",
                    "format": "float",
                    "example": 0.5,
                    "description": "confidence index",
                    "minimum": 0,
                    "maximum": 1
                },
                "provenance": {
                    "$ref": "#/definitions/DataProvenanceModel"
                },
                "metadata": {
                    "type": "object",
                    "example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}",
                    "description": "key-value system to store additional information that can be used to query data",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "raw_data": {
                    "type": "array",
                    "description": "list of repetition values",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ProvEntityModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "DataGetDTO": {
            "type": "object",
            "required": [
                "date",
                "provenance",
                "uri",
                "value",
                "variable"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/id/data/1598857852858",
                    "description": "data URI"
                },
                "date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "date or datetime"
                },
                "target": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://plot01",
                    "description": "target URI on which the data have been collected (e.g. a scientific object)"
                },
                "variable": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6",
                    "description": "variable URI"
                },
                "value": {
                    "type": "object",
                    "example": "8.6",
                    "description": "can be decimal, integer, boolean, string or date"
                },
                "confidence": {
                    "type": "number",
                    "format": "float",
                    "example": 0.5,
                    "description": "confidence index",
                    "minimum": 0,
                    "maximum": 1
                },
                "provenance": {
                    "$ref": "#/definitions/DataProvenanceModel"
                },
                "metadata": {
                    "type": "object",
                    "example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}",
                    "description": "key-value system to store additional information that can be used to query data",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "raw_data": {
                    "type": "array",
                    "description": "list of repetition values",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "CSVCell": {
            "type": "object",
            "properties": {
                "rowIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "colIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "CSVDatatypeError": {
            "type": "object",
            "properties": {
                "rowIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "colIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "datatype": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "CSVDuplicateURIError": {
            "type": "object",
            "properties": {
                "rowIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "colIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "previousRow": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CSVURINotFoundError": {
            "type": "object",
            "properties": {
                "rowIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "colIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "rdfType": {
                    "type": "string",
                    "format": "uri"
                },
                "objectURI": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "CSVValidationModel": {
            "type": "object",
            "properties": {
                "missingHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emptyHeaders": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "invalidHeaderURIs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "datatypeErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVDatatypeError"
                        }
                    }
                },
                "uriNotFoundErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVURINotFoundError"
                        }
                    }
                },
                "invalidURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "missingRequiredValueErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidValueErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "alreadyExistingURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CSVCell"
                    }
                },
                "duplicateURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CSVDuplicateURIError"
                    }
                }
            }
        },
        "DataCSVValidationDTO": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/definitions/CSVValidationModel"
                },
                "dataErrors": {
                    "$ref": "#/definitions/DataCSVValidationModel"
                },
                "sizeMax": {
                    "type": "integer",
                    "format": "int32"
                },
                "validation_token": {
                    "type": "string"
                },
                "nb_lines_imported": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DataCSVValidationModel": {
            "type": "object",
            "properties": {
                "missingHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emptyHeaders": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "invalidHeaderURIs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "datatypeErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVDatatypeError"
                        }
                    }
                },
                "uriNotFoundErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVURINotFoundError"
                        }
                    }
                },
                "invalidURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "missingRequiredValueErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidValueErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "alreadyExistingURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CSVCell"
                    }
                },
                "duplicateURIErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/CSVDuplicateURIError"
                    }
                },
                "invalidObjectErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidDateErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidDataTypeErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidExperimentErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "invalidDeviceErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "duplicatedDataErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "duplicatedObjectErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "duplicatedExperimentErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "duplicatedDeviceErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/CSVCell"
                        }
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "headersLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nbLinesImported": {
                    "type": "integer",
                    "format": "int32"
                },
                "nbLinesToImport": {
                    "type": "integer",
                    "format": "int32"
                },
                "validationStep": {
                    "type": "boolean"
                },
                "insertionStep": {
                    "type": "boolean"
                },
                "validCSV": {
                    "type": "boolean"
                },
                "tooLargeDataset": {
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "DataCreationDTO": {
            "type": "object",
            "required": [
                "date",
                "provenance",
                "value",
                "variable"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/id/data/1598857852858"
                },
                "date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "date or datetime"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "target": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://plot01",
                    "description": "target URI on which the data have been collected (e.g. a scientific object)"
                },
                "variable": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/variable#variable.2020-08-21_11-21-23entity6_method6_quality6_unit6",
                    "description": "variable URI"
                },
                "value": {
                    "type": "object",
                    "example": "8.6",
                    "description": "can be decimal, integer, boolean, string or date"
                },
                "confidence": {
                    "type": "number",
                    "format": "float",
                    "example": 0.5,
                    "description": "confidence index",
                    "minimum": 0,
                    "maximum": 1
                },
                "provenance": {
                    "$ref": "#/definitions/DataProvenanceModel"
                },
                "metadata": {
                    "type": "object",
                    "example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}",
                    "description": "key-value system to store additional information that can be used to query data",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "raw_data": {
                    "type": "array",
                    "description": "list of repetition values",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "DataConfidenceDTO": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "ActivityGetDTO": {
            "type": "object",
            "properties": {
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "oeso:ImageAcquisition",
                    "description": "activity type defined in the ontology"
                },
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "external uri of the activity or process"
                },
                "start_date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "start date or datetime"
                },
                "end_date": {
                    "type": "string",
                    "example": "2020-09-21T00:00:00+01:00",
                    "description": "end date or datetime"
                },
                "settings": {
                    "type": "object",
                    "description": "a key-value system to store process parameters",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AgentModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://sensor/s01",
                    "description": "agent uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "oeso:Sensor",
                    "description": "activity type defined in the ontology"
                },
                "settings": {
                    "type": "object",
                    "description": "a key value system to store agent parameters",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ProvenanceGetDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://provenance/prov01",
                    "description": "provenance name"
                },
                "name": {
                    "type": "string",
                    "example": "air_temperature_acquisition",
                    "description": "provenance uri manually entered"
                },
                "description": {
                    "type": "string",
                    "example": "acquisition of air temperature with sensor 01",
                    "description": "provenance description"
                },
                "prov_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityGetDTO"
                    }
                },
                "prov_agent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgentModel"
                    }
                }
            }
        },
        "DataFileGetDTO": {
            "type": "object",
            "required": [
                "provenance",
                "rdf_type",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#Image",
                    "description": "file type"
                },
                "date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "date or datetime"
                },
                "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "target": {
                    "type": "string",
                    "format": "uri",
                    "description": "target URI on which the data have been collected"
                },
                "provenance": {
                    "$ref": "#/definitions/DataProvenanceModel"
                },
                "metadata": {
                    "type": "object",
                    "example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}",
                    "description": "key-value system to store additional information that can be used to query data",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DataFilePathCreationDTO": {
            "type": "object",
            "required": [
                "provenance",
                "rdf_type",
                "relative_path"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#Image",
                    "description": "file type"
                },
                "date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "date or datetime"
                },
                "timezone": {
                    "type": "string",
                    "example": "Europe/Paris",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "target": {
                    "type": "string",
                    "format": "uri",
                    "description": "target URI on which the data have been collected"
                },
                "provenance": {
                    "$ref": "#/definitions/DataProvenanceModel"
                },
                "metadata": {
                    "type": "object",
                    "example": "{ \"LabelView\" : \"side90\",\n\"paramA\" : \"90\"}",
                    "description": "key-value system to store additional information that can be used to query data",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "relative_path": {
                    "type": "string",
                    "example": "http://opensilex.dev/id/file/1598857852858",
                    "description": "path to the stored file"
                }
            }
        },
        "DeviceCreationDTO": {
            "type": "object",
            "required": [
                "name",
                "rdf_type"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/set/device/sensingdevice-sensor_01",
                    "description": "Device URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#SensingDevice",
                    "description": "rdfType URI"
                },
                "name": {
                    "type": "string",
                    "example": "Sensor_01",
                    "description": "Device name"
                },
                "brand": {
                    "type": "string"
                },
                "constructor_model": {
                    "type": "string"
                },
                "serial_number": {
                    "type": "string"
                },
                "person_in_charge": {
                    "type": "string",
                    "format": "uri"
                },
                "start_up": {
                    "type": "string",
                    "format": "date"
                },
                "removal": {
                    "type": "string",
                    "format": "date"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RDFObjectRelationDTO": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "string",
                    "format": "uri"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DeviceGetDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#SensingDevice",
                    "description": "rdfType URI"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Sensor_01",
                    "description": "Device name"
                },
                "brand": {
                    "type": "string",
                    "example": "Campbell",
                    "description": "Device brand"
                },
                "constructor_model": {
                    "type": "string",
                    "example": "CS655",
                    "description": "Device model"
                },
                "serial_number": {
                    "type": "string",
                    "example": "123456",
                    "description": "Device serial number"
                },
                "person_in_charge": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Firstname.Lastname",
                    "description": "Person in charge"
                },
                "start_up": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-12-12",
                    "description": "Device date of start-up"
                },
                "removal": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-12-12",
                    "description": "Device date of removal"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "description",
                    "description": "comment"
                }
            }
        },
        "DeviceGetDetailsDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#SensingDevice",
                    "description": "rdfType URI"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Sensor_01",
                    "description": "Device name"
                },
                "brand": {
                    "type": "string",
                    "example": "Campbell",
                    "description": "Device brand"
                },
                "constructor_model": {
                    "type": "string",
                    "example": "CS655",
                    "description": "Device model"
                },
                "serial_number": {
                    "type": "string",
                    "example": "123456",
                    "description": "Device serial number"
                },
                "person_in_charge": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Firstname.Lastname",
                    "description": "Person in charge"
                },
                "start_up": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-12-12",
                    "description": "Device date of start-up"
                },
                "removal": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-12-12",
                    "description": "Device date of removal"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "description",
                    "description": "comment"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "NamedResourceDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "URIsListPostDTO": {
            "type": "object",
            "properties": {
                "uris": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "DocumentGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/documents#ProtocolExperimental"
                },
                "identifier": {
                    "type": "string",
                    "example": "doi:10.1340/309registries"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#ScientificDocument"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "example": "title"
                },
                "date": {
                    "type": "string",
                    "example": "2020-06-01"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "targets": {
                    "type": "array",
                    "example": "http://opensilex.dev/opensilex/id/variables/v001",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "authors": {
                    "type": "array",
                    "example": "Author name",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string",
                    "example": "fr"
                },
                "format": {
                    "type": "string",
                    "example": "jpg"
                },
                "keywords": {
                    "type": "array",
                    "example": "keyword",
                    "items": {
                        "type": "string"
                    }
                },
                "deprecated": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "EventGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/event/12590c87-1c34-426b-a231-beb7acb33415",
                    "description": "Event URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "rdf_type_name": {
                    "type": "string",
                    "example": "Move",
                    "description": "Event type name"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "Beginning of the event"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "End of the event"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "The pest attack lasted 20 minutes",
                    "description": "Description of the event"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "author": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "Event creator URI"
                }
            }
        },
        "EventCreationDTO": {
            "type": "object",
            "required": [
                "is_instant",
                "targets"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                }
            }
        },
        "CSVValidationDTO": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/definitions/CSVValidationModel"
                },
                "validation_token": {
                    "type": "string"
                },
                "nb_lines_imported": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EventUpdateDTO": {
            "type": "object",
            "required": [
                "is_instant",
                "targets",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                }
            }
        },
        "EventDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/event/12590c87-1c34-426b-a231-beb7acb33415",
                    "description": "Event URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "rdf_type_name": {
                    "type": "string",
                    "example": "Move",
                    "description": "Event type name"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "Beginning of the event"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "End of the event"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "The pest attack lasted 20 minutes",
                    "description": "Description of the event"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "author": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "Event creator URI"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                }
            }
        },
        "MoveCreationDTO": {
            "type": "object",
            "required": [
                "is_instant",
                "targets"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "from": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:greenHouseA"
                },
                "to": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:greenHouseB"
                },
                "targets_positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TargetPositionCreationDTO"
                    }
                }
            }
        },
        "PositionCreationDTO": {
            "type": "object",
            "properties": {
                "point": {
                    "$ref": "#/definitions/Point"
                },
                "x": {
                    "type": "integer",
                    "format": "int32",
                    "example": 35
                },
                "y": {
                    "type": "integer",
                    "format": "int32",
                    "example": 76
                },
                "z": {
                    "type": "integer",
                    "format": "int32",
                    "example": 8611
                },
                "text": {
                    "type": "string",
                    "example": "Near the greenhouse door"
                }
            }
        },
        "TargetPositionCreationDTO": {
            "type": "object",
            "required": [
                "target"
            ],
            "properties": {
                "target": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:plantA"
                },
                "position": {
                    "$ref": "#/definitions/PositionCreationDTO"
                }
            }
        },
        "MoveUpdateDTO": {
            "type": "object",
            "required": [
                "is_instant",
                "targets",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": true,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "2019-09-08T13:00:00+01:00"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "from": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:greenHouseA"
                },
                "to": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:greenHouseB"
                },
                "targets_positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TargetPositionCreationDTO"
                    }
                }
            }
        },
        "InfrastructureFacilityNamedDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/greenHouseA"
                },
                "name": {
                    "type": "string",
                    "example": "greenHouseA"
                }
            }
        },
        "MoveDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/event/12590c87-1c34-426b-a231-beb7acb33415",
                    "description": "Event URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeev#Irrigation",
                    "description": "Event type URI"
                },
                "rdf_type_name": {
                    "type": "string",
                    "example": "Move",
                    "description": "Event type name"
                },
                "start": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "Beginning of the event"
                },
                "end": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "End of the event"
                },
                "is_instant": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the event is instant"
                },
                "description": {
                    "type": "string",
                    "example": "Move to greenhouse A",
                    "description": "Description of the move"
                },
                "targets": {
                    "type": "array",
                    "description": "URI(s) of items concerned by this event",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "author": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "Event creator URI"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "from": {
                    "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                },
                "to": {
                    "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                },
                "targets_positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TargetPositionGetDTO"
                    }
                }
            }
        },
        "PositionGetDetailDTO": {
            "type": "object",
            "properties": {
                "point": {
                    "$ref": "#/definitions/Point"
                },
                "x": {
                    "type": "integer",
                    "format": "int32",
                    "example": 35
                },
                "y": {
                    "type": "integer",
                    "format": "int32",
                    "example": 76
                },
                "z": {
                    "type": "integer",
                    "format": "int32",
                    "example": 8611
                },
                "text": {
                    "type": "string",
                    "example": "Near the greenhouse door"
                }
            }
        },
        "TargetPositionGetDTO": {
            "type": "object",
            "properties": {
                "target": {
                    "type": "string",
                    "format": "uri",
                    "example": "test:plantA"
                },
                "position": {
                    "$ref": "#/definitions/PositionGetDetailDTO"
                }
            }
        },
        "ExperimentGetDTO": {
            "type": "object",
            "required": [
                "start_date"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-02-20"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "description": {
                    "type": "string"
                },
                "objective": {
                    "type": "string"
                },
                "species": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "factors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "organisations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureModel"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureFacilityModel"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOProjectModel"
                    }
                },
                "scientific_supervisors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "technical_supervisors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "is_public": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "NamedResourceDTOInfrastructureFacilityModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "NamedResourceDTOInfrastructureModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "NamedResourceDTOProjectModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "ExperimentCreationDTO": {
            "type": "object",
            "required": [
                "name",
                "objective",
                "start_date"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-02-20"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "description": {
                    "type": "string"
                },
                "objective": {
                    "type": "string"
                },
                "species": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "organisations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "scientific_supervisors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "technical_supervisors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "factors": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "is_public": {
                    "type": "boolean"
                }
            }
        },
        "ExperimentGetListDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "type": "string",
                    "format": "date"
                },
                "description": {
                    "type": "string"
                },
                "objective": {
                    "type": "string"
                },
                "species": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "is_public": {
                    "type": "boolean"
                }
            }
        },
        "SpeciesDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FactorDetailsGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation"
                },
                "name": {
                    "type": "string",
                    "example": "Irrigation"
                },
                "category": {
                    "type": "string",
                    "format": "uri",
                    "example": "waterManagement"
                },
                "description": {
                    "type": "string",
                    "example": "Experimental factor about water management"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FactorLevelGetDTO"
                    }
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiment": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/experiments/ZA17"
                }
            }
        },
        "FactorLevelGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation.ww"
                },
                "name": {
                    "type": "string",
                    "example": "WW"
                },
                "description": {
                    "type": "string",
                    "example": "Well watered"
                }
            }
        },
        "InfrastructureFacilityGetDTO": {
            "type": "object",
            "required": [
                "organizations"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureModel"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                }
            }
        },
        "FactorCreationDTO": {
            "type": "object",
            "required": [
                "levels",
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation"
                },
                "name": {
                    "type": "string",
                    "example": "Irrigation"
                },
                "category": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://aims.fao.org/aos/agrovoc/c_5b384c25"
                },
                "description": {
                    "type": "string",
                    "example": "Experimental factor about water exposure"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FactorLevelCreationDTO"
                    }
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiment": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "FactorLevelCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation.ww"
                },
                "name": {
                    "type": "string",
                    "example": "WW"
                },
                "description": {
                    "type": "string",
                    "example": "Well watered"
                }
            }
        },
        "FactorGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation"
                },
                "name": {
                    "type": "string",
                    "example": "Irrigation"
                },
                "category": {
                    "type": "string",
                    "format": "uri",
                    "example": "waterManagement"
                },
                "description": {
                    "type": "string",
                    "example": "Experimental factor about water management"
                },
                "experiment": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/experiments/ZA17"
                }
            }
        },
        "FactorUpdateDTO": {
            "type": "object",
            "required": [
                "levels",
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation"
                },
                "name": {
                    "type": "string",
                    "example": "Irrigation"
                },
                "category": {
                    "type": "string",
                    "format": "uri",
                    "example": "waterManagement"
                },
                "description": {
                    "type": "string",
                    "example": "Experimental factor about water management"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FactorLevelCreationDTO"
                    }
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "FactorCategoryGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/ns/oa#describing",
                    "description": "URI of the factor category"
                },
                "name": {
                    "type": "string",
                    "example": "describing",
                    "description": "Name of the factor category"
                }
            }
        },
        "FactorLevelGetDetailDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation.ww"
                },
                "name": {
                    "type": "string",
                    "example": "WW"
                },
                "description": {
                    "type": "string",
                    "example": "Well watered"
                },
                "factor": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/factors#irrigation"
                },
                "factor_name": {
                    "type": "string",
                    "example": "Irrigation"
                }
            }
        },
        "GermplasmCreationDTO": {
            "type": "object",
            "required": [
                "name",
                "rdf_type"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/plantMaterialLot#SL_001",
                    "description": "Germplasm URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#SeedLot",
                    "description": "rdfType URI"
                },
                "name": {
                    "type": "string",
                    "example": "SL_001",
                    "description": "Germplasm name"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string",
                    "description": "Germplasm code (accessionNumber, varietyCode...)"
                },
                "production_year": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2015,
                    "description": "production year"
                },
                "description": {
                    "type": "string",
                    "description": "comment"
                },
                "species": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/species#zeamays",
                    "description": "species URI"
                },
                "variety": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/variety#B73",
                    "description": "variety URI"
                },
                "accession": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/accession#B73_INRA",
                    "description": "accession URI"
                },
                "institute": {
                    "type": "string",
                    "example": "INRA",
                    "description": "institute"
                },
                "website": {
                    "type": "string",
                    "format": "uri",
                    "description": "website"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GermplasmGetSingleDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "production_year": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "species": {
                    "type": "string",
                    "format": "uri"
                },
                "species_name": {
                    "type": "string"
                },
                "variety": {
                    "type": "string",
                    "format": "uri"
                },
                "variety_name": {
                    "type": "string"
                },
                "accession": {
                    "type": "string",
                    "format": "uri"
                },
                "accession_name": {
                    "type": "string"
                },
                "institute": {
                    "type": "string"
                },
                "website": {
                    "type": "string",
                    "format": "uri"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "GermplasmGetAllDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "species": {
                    "type": "string",
                    "format": "uri"
                },
                "species_name": {
                    "type": "string"
                }
            }
        },
        "GermplasmUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "rdf_type",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/plantMaterialLot#SL_001",
                    "description": "Germplasm URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/vocabulary/oeso#SeedLot",
                    "description": "rdfType URI"
                },
                "name": {
                    "type": "string",
                    "example": "SL_001",
                    "description": "Germplasm name"
                },
                "synonyms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string",
                    "description": "Germplasm code (accessionNumber, varietyCode...)"
                },
                "production_year": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2015,
                    "description": "production year"
                },
                "description": {
                    "type": "string",
                    "description": "comment"
                },
                "species": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/species#zeamays",
                    "description": "species URI"
                },
                "variety": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/variety#B73",
                    "description": "variety URI"
                },
                "accession": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/accession#B73_INRA",
                    "description": "accession URI"
                },
                "institute": {
                    "type": "string",
                    "example": "INRA",
                    "description": "institute"
                },
                "website": {
                    "type": "string",
                    "format": "uri",
                    "description": "website"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "RDFPropertyDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "format": "uri"
                },
                "range": {
                    "type": "string",
                    "format": "uri"
                },
                "parent": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "name_translations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "comment_translations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "domain_rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "range_label": {
                    "type": "string"
                }
            }
        },
        "RDFTypeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "ResourceTreeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri"
                },
                "selected": {
                    "type": "boolean"
                },
                "disabled": {
                    "type": "boolean"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceTreeDTO"
                    }
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "OWLClassPropertyRestrictionDTO": {
            "type": "object",
            "required": [
                "domain",
                "rdf_type"
            ],
            "properties": {
                "property": {
                    "type": "string",
                    "format": "uri"
                },
                "required": {
                    "type": "boolean"
                },
                "list": {
                    "type": "boolean"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:Plot",
                    "description": "RDF type"
                },
                "domain": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:ScientificObject",
                    "description": "Domain URI"
                }
            }
        },
        "URITypesDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_types": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InfrastructureCreationDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InfrastructureGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureModel"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureModel"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOGroupModel"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOInfrastructureFacilityModel"
                    }
                },
                "experiments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOExperimentModel"
                    }
                }
            }
        },
        "NamedResourceDTOExperimentModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "NamedResourceDTOGroupModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "ResourceDagDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "InfrastructureUpdateDTO": {
            "type": "object",
            "required": [
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "InfrastructureFacilityCreationDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "InfrastructureFacilityUpdateDTO": {
            "type": "object",
            "required": [
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "PositionGetDTO": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.opensilex.org/move/12590c87-1c34-426b-a231-beb7acb33415",
                    "description": "Move event which update the position"
                },
                "move_time": {
                    "type": "string",
                    "example": "2019-09-08T12:00:00+01:00",
                    "description": "Move time"
                },
                "from": {
                    "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                },
                "to": {
                    "$ref": "#/definitions/InfrastructureFacilityNamedDTO"
                },
                "position": {
                    "$ref": "#/definitions/PositionGetDetailDTO"
                }
            }
        },
        "ProjectGetDetailDTO": {
            "type": "object",
            "required": [
                "name",
                "start_date"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "DROught-tolerant yielding PlantS"
                },
                "shortname": {
                    "type": "string",
                    "example": "DROPS"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2010-02-20"
                },
                "end_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2015-02-20"
                },
                "description": {
                    "type": "string",
                    "example": "DROPS aims at developing novel methods...."
                },
                "objective": {
                    "type": "string",
                    "example": "Developing novel methods and strategies for genetic yield improvement under dry environments and for enhanced plant water-use efficiency."
                },
                "financial_funding": {
                    "type": "string",
                    "example": "European Union"
                },
                "website": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.inrae.fr/dropsproject"
                },
                "related_projects": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "coordinators": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "scientific_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "administrative_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiments": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "ProjectCreationDTO": {
            "type": "object",
            "required": [
                "name",
                "start_date"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "DROught-tolerant yielding PlantS"
                },
                "shortname": {
                    "type": "string",
                    "example": "DROPS"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2010-02-20"
                },
                "end_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2015-02-20"
                },
                "description": {
                    "type": "string",
                    "example": "DROPS aims at developing novel methods...."
                },
                "objective": {
                    "type": "string",
                    "example": "Developing novel methods and strategies for genetic yield improvement under dry environments and for enhanced plant water-use efficiency."
                },
                "financial_funding": {
                    "type": "string",
                    "example": "European Union"
                },
                "website": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.inrae.fr/dropsproject"
                },
                "related_projects": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "coordinators": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "scientific_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "administrative_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiments": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "ProjectGetDTO": {
            "type": "object",
            "required": [
                "name",
                "start_date"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "DROught-tolerant yielding PlantS"
                },
                "shortname": {
                    "type": "string",
                    "example": "DROPS"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2010-02-20"
                },
                "end_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2015-02-20"
                },
                "description": {
                    "type": "string",
                    "example": "DROPS aims at developing novel methods...."
                },
                "objective": {
                    "type": "string",
                    "example": "Developing novel methods and strategies for genetic yield improvement under dry environments and for enhanced plant water-use efficiency."
                },
                "financial_funding": {
                    "type": "string",
                    "example": "European Union"
                },
                "website": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.inrae.fr/dropsproject"
                },
                "related_projects": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "coordinators": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "scientific_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "administrative_contacts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiments": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "ActivityCreationDTO": {
            "type": "object",
            "properties": {
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "oeso:ImageAcquisition",
                    "description": "activity type defined in the ontology"
                },
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "external uri of the activity or process"
                },
                "start_date": {
                    "type": "string",
                    "example": "2020-08-21T00:00:00+01:00",
                    "description": "start date or datetime"
                },
                "end_date": {
                    "type": "string",
                    "example": "2020-09-21T00:00:00+01:00",
                    "description": "end date or datetime"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the dates and if the timezone is different from the default one"
                },
                "settings": {
                    "type": "object",
                    "description": "a key-value system to store process parameters",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ProvenanceCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://provenance/prov01",
                    "description": "provenance name"
                },
                "name": {
                    "type": "string",
                    "example": "air_temperature_acquisition",
                    "description": "provenance uri manually entered"
                },
                "description": {
                    "type": "string",
                    "example": "acquisition of air temperature with sensor 01",
                    "description": "provenance description"
                },
                "prov_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityCreationDTO"
                    }
                },
                "prov_agent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgentModel"
                    }
                }
            }
        },
        "ProvenanceUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "air_temperature_acquisition",
                    "description": "uri of the provenance being updated"
                },
                "name": {
                    "type": "string",
                    "example": "air_temperature_acquisition",
                    "description": "provenance uri manually entered"
                },
                "description": {
                    "type": "string",
                    "example": "acquisition of air temperature with sensor 01",
                    "description": "provenance description"
                },
                "prov_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActivityCreationDTO"
                    }
                },
                "prov_agent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgentModel"
                    }
                }
            }
        },
        "OrderBy": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "ASCENDING",
                        "DESCENDING"
                    ]
                }
            }
        },
        "ScientificObjectSearchDTO": {
            "type": "object",
            "properties": {
                "uris": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "excluded_uris": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "experiment": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_types": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri"
                },
                "germplasm": {
                    "type": "string",
                    "format": "uri"
                },
                "factor_levels": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "facility": {
                    "type": "string",
                    "format": "uri"
                },
                "existence_date": {
                    "type": "string",
                    "format": "date"
                },
                "creation_date": {
                    "type": "string",
                    "format": "date"
                },
                "order_by": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderBy"
                    }
                },
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "page_sze": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "NamedResourceDTOFactorLevelModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "ScientificObjectDetailDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:Plot",
                    "description": "Scientific object type"
                },
                "rdf_type_name": {
                    "type": "string",
                    "example": "Plot",
                    "description": "Scientific object type"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri",
                    "description": "Scientific object parent URI"
                },
                "parent_name": {
                    "type": "string",
                    "description": "Scientific object parent name"
                },
                "factor_level": {
                    "type": "array",
                    "description": "Scientific object factor levels",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOFactorLevelModel"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "ScientificObjectDetailByExperimentsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:Plot",
                    "description": "Scientific object type"
                },
                "rdf_type_name": {
                    "type": "string",
                    "example": "Plot",
                    "description": "Scientific object type"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri",
                    "description": "Scientific object parent URI"
                },
                "parent_name": {
                    "type": "string",
                    "description": "Scientific object parent name"
                },
                "experiment": {
                    "type": "string",
                    "format": "uri",
                    "description": "Scientific object experiment URI"
                },
                "experiment_name": {
                    "type": "string",
                    "description": "Scientific object experiment name"
                },
                "factor_level": {
                    "type": "array",
                    "description": "Scientific object factor levels",
                    "items": {
                        "$ref": "#/definitions/NamedResourceDTOFactorLevelModel"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "ScientificObjectCreationDTO": {
            "type": "object",
            "required": [
                "name",
                "rdf_type"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.org/id/Plot 12",
                    "description": "Scientific object URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:Plot",
                    "description": "Scientific object type"
                },
                "name": {
                    "type": "string",
                    "example": "Plot 12",
                    "description": "Scientific object name"
                },
                "experiment": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/experiments/ZA17",
                    "description": "Scientific object experiment URI"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "geometry": {
                    "example": "{'type':'Polygon','coordinates':[[[3.97167246,43.61328981], [3.97171243,43.61332417],[3.9717427,43.61330558],[3.97170272,43.61327122], [3.97167246,43.61328981],[3.97167246,43.61328981]]]}",
                    "description": "The geographical coordinates of the Geospatial",
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "ScientificObjectUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "rdf_type",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.org/id/Plot 12",
                    "description": "Scientific object URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri",
                    "example": "vocabulary:Plot",
                    "description": "Scientific object type"
                },
                "name": {
                    "type": "string",
                    "example": "Plot 12",
                    "description": "Scientific object name"
                },
                "experiment": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex/set/experiments/ZA17",
                    "description": "Scientific object experiment URI"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RDFObjectRelationDTO"
                    }
                },
                "geometry": {
                    "example": "{'type':'Polygon','coordinates':[[[3.97167246,43.61328981], [3.97171243,43.61332417],[3.9717427,43.61330558],[3.97170272,43.61327122], [3.97167246,43.61328981],[3.97167246,43.61328981]]]}",
                    "description": "The geographical coordinates of the Geospatial",
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "ScientificObjectNodeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Scientific object creation date"
                },
                "destruction_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Scientific object creation date"
                }
            }
        },
        "ScientificObjectNodeWithChildrenDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Scientific object creation date"
                },
                "destruction_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Scientific object creation date"
                },
                "child_count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListItemDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ApiContactInfoDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Opensilex Team",
                    "description": "Opensilex Team"
                },
                "email": {
                    "type": "string",
                    "example": "opensilex@gmail.com",
                    "description": "opensilex@gmail.com"
                },
                "homepage": {
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "ApiExternalDocsDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Opensilex api docs",
                    "description": "Opensilex api docs"
                },
                "url": {
                    "type": "string",
                    "example": "https://github.com/OpenSILEX/opensilex/blob/master/opensilex-doc/src/main/resources/index.md",
                    "description": "https://github.com/OpenSILEX/opensilex/blob/master/opensilex-doc/src/main/resources/index.md"
                }
            }
        },
        "ApiGitCommitDTO": {
            "type": "object",
            "properties": {
                "commit_id": {
                    "type": "string"
                },
                "commit_message": {
                    "type": "string"
                }
            }
        },
        "ApiLicenseInfoDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "GNU Affero General Public License v3",
                    "description": "GNU Affero General Public License v3"
                },
                "url": {
                    "type": "string",
                    "example": "https://www.gnu.org/licenses/agpl-3.0.fr.html",
                    "description": "https://www.gnu.org/licenses/agpl-3.0.fr.html"
                }
            }
        },
        "ApiModulesInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "opensilex-core",
                    "description": "opensilex-core"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0-beta+2",
                    "description": "1.0.0-beta+2"
                }
            }
        },
        "VersionInfoDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "example": "PHIS",
                    "description": "Opensilex instance name"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0beta+2",
                    "description": "Opensilex API version"
                },
                "description": {
                    "type": "string",
                    "example": "OpenSILEX is an ontology-driven Information System designed for life science data.",
                    "description": "Opensilex description"
                },
                "contact": {
                    "$ref": "#/definitions/ApiContactInfoDTO"
                },
                "license": {
                    "$ref": "#/definitions/ApiLicenseInfoDTO"
                },
                "modules_version": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiModulesInfo"
                    }
                },
                "external_docs": {
                    "$ref": "#/definitions/ApiExternalDocsDTO"
                },
                "api_docs": {
                    "$ref": "#/definitions/ApiExternalDocsDTO"
                },
                "git_commit": {
                    "$ref": "#/definitions/ApiGitCommitDTO"
                },
                "github_page": {
                    "type": "string"
                }
            }
        },
        "VariableCreationDTO": {
            "type": "object",
            "required": [
                "characteristic",
                "datatype",
                "entity",
                "method",
                "name",
                "unit"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/Plant_Height"
                },
                "name": {
                    "type": "string",
                    "example": "Plant_Height"
                },
                "alternative_name": {
                    "type": "string",
                    "example": "Plant_Height_Estimation_Cm"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height of a plant."
                },
                "entity": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "entity_of_interest": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/plantMaterialLot#SL_001"
                },
                "characteristic": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "trait": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://purl.obolibrary.org/obo/TO_0002644"
                },
                "trait_name": {
                    "type": "string",
                    "example": "dry matter digestibility"
                },
                "method": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/Estimation"
                },
                "unit": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/centimeter"
                },
                "species": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.phenome-fppn.fr/id/species/zeamays"
                },
                "datatype": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/2001/XMLSchema#integer"
                },
                "time_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "sampling_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "CharacteristicGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "name": {
                    "type": "string",
                    "example": "Height"
                }
            }
        },
        "EntityGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "name": {
                    "type": "string",
                    "example": "Plant"
                }
            }
        },
        "MethodGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                },
                "name": {
                    "type": "string",
                    "example": "ImageAnalysis"
                }
            }
        },
        "NamedResourceDTOInterestEntityModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                }
            }
        },
        "UnitGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/Centimeter"
                },
                "name": {
                    "type": "string",
                    "example": "Centimeter"
                }
            }
        },
        "VariableDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/Plant_Height"
                },
                "name": {
                    "type": "string",
                    "example": "Plant_Height"
                },
                "alternative_name": {
                    "type": "string",
                    "example": "Plant_Height_Estimation_Cm"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height of a plant."
                },
                "entity": {
                    "$ref": "#/definitions/EntityGetDTO"
                },
                "entity_of_interest": {
                    "$ref": "#/definitions/NamedResourceDTOInterestEntityModel"
                },
                "characteristic": {
                    "$ref": "#/definitions/CharacteristicGetDTO"
                },
                "trait": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://purl.obolibrary.org/obo/TO_0002644"
                },
                "trait_name": {
                    "type": "string",
                    "example": "dry matter digestibility"
                },
                "method": {
                    "$ref": "#/definitions/MethodGetDTO"
                },
                "unit": {
                    "$ref": "#/definitions/UnitGetDTO"
                },
                "species": {
                    "example": "http://www.phenome-fppn.fr/id/species/zeamays",
                    "$ref": "#/definitions/SpeciesDTO"
                },
                "time_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "sampling_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "datatype": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/2001/XMLSchema#integer"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "VariableUpdateDTO": {
            "type": "object",
            "required": [
                "characteristic",
                "datatype",
                "entity",
                "method",
                "name",
                "unit",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "Plant_Height"
                },
                "alternative_name": {
                    "type": "string",
                    "example": "Plant_Height_Estimation_Cm"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height of a plant."
                },
                "entity": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "entity_of_interest": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/opensilex/id/plantMaterialLot#SL_001"
                },
                "characteristic": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "trait": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://purl.obolibrary.org/obo/TO_0002644"
                },
                "trait_name": {
                    "type": "string",
                    "example": "dry matter digestibility"
                },
                "method": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/Estimation"
                },
                "unit": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/centimeter"
                },
                "species": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.phenome-fppn.fr/id/species/zeamays"
                },
                "datatype": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://www.w3.org/2001/XMLSchema#integer"
                },
                "time_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "sampling_interval": {
                    "type": "string",
                    "example": "minutes"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "VariableGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/Plant_Height"
                },
                "name": {
                    "type": "string",
                    "example": "Plant_Height"
                },
                "entity": {
                    "$ref": "#/definitions/EntityGetDTO"
                },
                "entity_of_interest": {
                    "$ref": "#/definitions/NamedResourceDTO"
                },
                "characteristic": {
                    "$ref": "#/definitions/CharacteristicGetDTO"
                },
                "method": {
                    "$ref": "#/definitions/MethodGetDTO"
                },
                "unit": {
                    "$ref": "#/definitions/UnitGetDTO"
                }
            }
        },
        "VariableDatatypeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CharacteristicDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "name": {
                    "type": "string",
                    "example": "Height"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "CharacteristicCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "name": {
                    "type": "string",
                    "example": "Height"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "CharacteristicUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/characteristic/Height"
                },
                "name": {
                    "type": "string",
                    "example": "Height"
                },
                "description": {
                    "type": "string",
                    "example": "Describe the height"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "EntityCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "name": {
                    "type": "string",
                    "example": "Plant"
                },
                "description": {
                    "type": "string",
                    "example": "The entity which describe a plant"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "EntityUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "name": {
                    "type": "string",
                    "example": "Plant"
                },
                "description": {
                    "type": "string",
                    "example": "The entity which describe a plant"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "EntityDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity/Plant"
                },
                "name": {
                    "type": "string",
                    "example": "Plant"
                },
                "description": {
                    "type": "string",
                    "example": "The entity which describe a plant"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InterestEntityCreationDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                },
                "name": {
                    "type": "string",
                    "example": "Plot"
                },
                "description": {
                    "type": "string",
                    "example": "The entity of interest which characterizes a plot"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InterestEntityDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                },
                "name": {
                    "type": "string",
                    "example": "Plot"
                },
                "description": {
                    "type": "string",
                    "example": "The entity of interest which characterizes a plot"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InterestEntityUpdateDTO": {
            "type": "object",
            "required": [
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                },
                "name": {
                    "type": "string",
                    "example": "Plot"
                },
                "description": {
                    "type": "string",
                    "example": "The entity of interest which characterizes a plot"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "InterestEntityGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/entity_of_interest/Plot"
                },
                "name": {
                    "type": "string",
                    "example": "Plot"
                }
            }
        },
        "MethodDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                },
                "name": {
                    "type": "string",
                    "example": "ImageAnalysis"
                },
                "description": {
                    "type": "string",
                    "example": "Based on a software"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "MethodCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                },
                "name": {
                    "type": "string",
                    "example": "ImageAnalysis"
                },
                "description": {
                    "type": "string",
                    "example": "Based on a software"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "MethodUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/method/ImageAnalysis"
                },
                "name": {
                    "type": "string",
                    "example": "ImageAnalysis"
                },
                "description": {
                    "type": "string",
                    "example": "Based on a software"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "UnitDetailsDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/Centimeter"
                },
                "name": {
                    "type": "string",
                    "example": "Centimeter"
                },
                "description": {
                    "type": "string",
                    "example": "A common unit for describing a length"
                },
                "symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "alternative_symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "UnitCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/Centimeter"
                },
                "name": {
                    "type": "string",
                    "example": "Centimeter"
                },
                "description": {
                    "type": "string",
                    "example": "A common unit for describing a length"
                },
                "symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "alternative_symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "UnitUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/set/variables/unit/Centimeter"
                },
                "name": {
                    "type": "string",
                    "example": "Centimeter"
                },
                "description": {
                    "type": "string",
                    "example": "A common unit for describing a length"
                },
                "symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "alternative_symbol": {
                    "type": "string",
                    "example": "cm"
                },
                "exact_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "close_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "broad_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "narrow_match": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "VariablesGroupCreationDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "group of plants"
                },
                "description": {
                    "type": "string",
                    "example": "Group where we can find all plant related variables"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "VariablesGroupGetDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "group of plants"
                },
                "description": {
                    "type": "string",
                    "example": "Group where we can find all plant related variables"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableGetDTO"
                    }
                }
            }
        },
        "VariablesGroupUpdateDTO": {
            "type": "object",
            "required": [
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string",
                    "example": "group of plants"
                },
                "description": {
                    "type": "string",
                    "example": "Group where we can find all plant related variables"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "FrontConfigDTO": {
            "type": "object",
            "required": [
                "footerComponent",
                "headerComponent",
                "homeComponent",
                "loginComponent",
                "menu",
                "menuComponent",
                "notFoundComponent",
                "pathPrefix",
                "routes"
            ],
            "properties": {
                "pathPrefix": {
                    "type": "string",
                    "example": "app",
                    "description": "Application url path prefix"
                },
                "homeComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultHomeComponent",
                    "description": "Home component identifier"
                },
                "notFoundComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultNotFoundComponent",
                    "description": "Not found component identifier"
                },
                "headerComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultHeaderComponent",
                    "description": "Header component identifier"
                },
                "loginComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultLoginComponent",
                    "description": "Login component identifier"
                },
                "menuComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultMenuComponent",
                    "description": "Menu component identifier"
                },
                "footerComponent": {
                    "type": "string",
                    "example": "opensilex-DefaultFooterComponent",
                    "description": "Footer component identifier"
                },
                "menu": {
                    "type": "array",
                    "description": "Application menu with routes",
                    "items": {
                        "$ref": "#/definitions/MenuItemDTO"
                    }
                },
                "routes": {
                    "type": "array",
                    "description": "List of configured routes",
                    "items": {
                        "$ref": "#/definitions/RouteDTO"
                    }
                },
                "themeModule": {
                    "type": "string",
                    "description": "Theme module identifier"
                },
                "themeName": {
                    "type": "string",
                    "description": "Theme module name"
                },
                "openIDAuthenticationURI": {
                    "type": "string",
                    "description": "OpenID Authorization URI"
                },
                "openIDConnectionTitle": {
                    "type": "string"
                },
                "activateResetPassword": {
                    "type": "boolean"
                }
            }
        },
        "MenuItemDTO": {
            "type": "object",
            "required": [
                "children",
                "id",
                "label"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "users",
                    "description": "Menu identifier"
                },
                "label": {
                    "type": "string",
                    "example": "Users",
                    "description": "Menu label"
                },
                "children": {
                    "type": "array",
                    "description": "List of sub menu items",
                    "items": {
                        "$ref": "#/definitions/MenuItemDTO"
                    }
                },
                "route": {
                    "description": "Optional route definition",
                    "$ref": "#/definitions/RouteDTO"
                }
            }
        },
        "RouteDTO": {
            "type": "object",
            "required": [
                "component",
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string",
                    "example": "/users",
                    "description": "Route path"
                },
                "component": {
                    "type": "string",
                    "example": "opensilex.UserList",
                    "description": "Route component"
                },
                "credentials": {
                    "type": "array",
                    "description": "Required credentials list for this route",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "FontConfigDTO": {
            "type": "object",
            "properties": {
                "family": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "src": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ThemeConfigDTO": {
            "type": "object",
            "properties": {
                "hasStyle": {
                    "type": "boolean"
                },
                "fonts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FontConfigDTO"
                    }
                },
                "iconClassesRDF": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "componentOverrides": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "VueRDFTypeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "parent": {
                    "type": "string",
                    "format": "uri"
                },
                "icon": {
                    "type": "string"
                },
                "name_translations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "comment_translations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "is_abstract": {
                    "type": "boolean"
                },
                "data_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VueRDFTypePropertyDTO"
                    }
                },
                "object_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VueRDFTypePropertyDTO"
                    }
                },
                "properties_order": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            }
        },
        "VueRDFTypePropertyDTO": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "inherited": {
                    "type": "boolean"
                },
                "target_property": {
                    "type": "string",
                    "format": "uri"
                },
                "input_component": {
                    "type": "string"
                },
                "input_components_by_property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "view_component": {
                    "type": "string"
                },
                "is_list": {
                    "type": "boolean"
                },
                "is_required": {
                    "type": "boolean"
                },
                "is_custom": {
                    "type": "boolean"
                }
            }
        },
        "VueDataTypeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "short_uri": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "input_component": {
                    "type": "string"
                },
                "view_component": {
                    "type": "string"
                },
                "label_key": {
                    "type": "string"
                }
            }
        },
        "VueObjectTypeDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "type": "string"
                },
                "short_uri": {
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "input_component": {
                    "type": "string"
                },
                "input_components_by_property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "view_component": {
                    "type": "string"
                },
                "rdf_type": {
                    "$ref": "#/definitions/RDFTypeDTO"
                }
            }
        },
        "VueRDFTypeParameterDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "icon": {
                    "type": "string"
                },
                "is_abstract": {
                    "type": "boolean"
                }
            }
        },
        "FormUpdateDTO": {
            "type": "object",
            "required": [
                "modified_date",
                "uri"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "format": "uri"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI of the form being updated"
                },
                "modified_date": {
                    "type": "string",
                    "example": "YYYY-MM-DDTHH:MM:SSZ",
                    "description": "timestamp"
                },
                "form_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "FormCreationDTO": {
            "type": "object",
            "required": [
                "modified_date"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "format": "uri"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "modified_date": {
                    "type": "string",
                    "example": "YYYY-MM-DDTHH:MM:SSZ",
                    "description": "timestamp"
                },
                "form_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "FormGetDTO": {
            "type": "object",
            "required": [
                "modified_date",
                "uri"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "format": "uri"
                },
                "timezone": {
                    "type": "string",
                    "description": "to specify if the offset is not in the date and if the timezone is different from the default one"
                },
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI of the form being updated"
                },
                "modified_date": {
                    "type": "string",
                    "example": "YYYY-MM-DDTHH:MM:SSZ",
                    "description": "timestamp"
                },
                "form_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "TokenGetDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpc19hZG1pbiI6dHJ...",
                    "description": "User token"
                }
            }
        },
        "AuthenticationDTO": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "example": "admin@opensilex.org",
                    "description": "User identifier, email or URI"
                },
                "password": {
                    "type": "string",
                    "example": "admin",
                    "description": "User password"
                }
            }
        },
        "CredentialDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Credential identifier"
                },
                "name": {
                    "type": "string",
                    "description": "Credential name"
                }
            }
        },
        "CredentialsGroupDTO": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string",
                    "example": "Security",
                    "description": "Credential group identifier"
                },
                "group_key_name": {
                    "type": "string",
                    "example": "security",
                    "description": "Credential group key label"
                },
                "credentials": {
                    "type": "array",
                    "description": "Credentials Map",
                    "items": {
                        "$ref": "#/definitions/CredentialDTO"
                    }
                }
            }
        },
        "GroupCreationDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/groups#Experiment_manager",
                    "description": "Group URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Experiment manager",
                    "description": "Group name"
                },
                "description": {
                    "type": "string",
                    "example": "Group for all experiments managers",
                    "description": "Group description"
                },
                "user_profiles": {
                    "type": "array",
                    "description": "Group user with profile",
                    "items": {
                        "$ref": "#/definitions/GroupUserProfileDTO"
                    }
                }
            }
        },
        "GroupUserProfileDTO": {
            "type": "object",
            "required": [
                "user_uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/groups#Experiment_manager",
                    "description": "Group URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "profile_uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "User associated profile URI"
                },
                "profile_name": {
                    "type": "string",
                    "description": "User associated profile name"
                },
                "user_uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "User URI"
                },
                "user_name": {
                    "type": "string",
                    "description": "User name"
                }
            }
        },
        "GroupDTO": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/groups#Experiment_manager",
                    "description": "Group URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Experiment manager",
                    "description": "Group name"
                },
                "description": {
                    "type": "string",
                    "example": "Group for all experiments managers",
                    "description": "Group description"
                },
                "user_profiles": {
                    "type": "array",
                    "description": "Group user with profile",
                    "items": {
                        "$ref": "#/definitions/GroupUserProfileDTO"
                    }
                }
            }
        },
        "GroupUpdateDTO": {
            "type": "object",
            "required": [
                "description",
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/groups#Experiment_manager",
                    "description": "Group URI"
                },
                "rdf_type": {
                    "type": "string",
                    "format": "uri"
                },
                "rdf_type_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Experiment manager",
                    "description": "Group name"
                },
                "description": {
                    "type": "string",
                    "example": "Group for all experiments managers",
                    "description": "Group description"
                },
                "user_profiles": {
                    "type": "array",
                    "description": "Group user with profile",
                    "items": {
                        "$ref": "#/definitions/GroupUserProfileDTO"
                    }
                }
            }
        },
        "ProfileGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#agent.Admin_OpenSilex",
                    "description": "User URI"
                },
                "name": {
                    "type": "string",
                    "example": "profile1",
                    "description": "Profile name"
                },
                "credentials": {
                    "type": "array",
                    "description": "Profile credentials",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ProfileCreationDTO": {
            "type": "object",
            "required": [
                "credentials",
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#agent.Admin_OpenSilex",
                    "description": "User URI"
                },
                "name": {
                    "type": "string",
                    "example": "profile1",
                    "description": "Profile name"
                },
                "credentials": {
                    "type": "array",
                    "description": "Profile credentials",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ProfileUpdateDTO": {
            "type": "object",
            "required": [
                "credentials",
                "name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#agent.Admin_OpenSilex",
                    "description": "User URI"
                },
                "name": {
                    "type": "string",
                    "example": "profile1",
                    "description": "Profile name"
                },
                "credentials": {
                    "type": "array",
                    "description": "Profile credentials",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserCreationDTO": {
            "type": "object",
            "required": [
                "admin",
                "email",
                "first_name",
                "language",
                "last_name",
                "password"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "User URI"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "example": "en",
                    "description": "User language"
                },
                "password": {
                    "type": "string",
                    "example": "azerty",
                    "description": "User password"
                },
                "admin": {
                    "type": "boolean",
                    "example": false,
                    "description": "User admin flag"
                }
            }
        },
        "UserUpdateDTO": {
            "type": "object",
            "required": [
                "admin",
                "email",
                "first_name",
                "language",
                "last_name",
                "uri"
            ],
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "User URI"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "example": "en",
                    "description": "User language"
                },
                "password": {
                    "type": "string",
                    "example": "azerty",
                    "description": "Optional user password"
                },
                "admin": {
                    "type": "boolean",
                    "example": false,
                    "description": "User admin flag"
                }
            }
        },
        "UserGetDTO": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://opensilex.dev/users#Admin.OpenSilex",
                    "description": "User URI"
                },
                "first_name": {
                    "type": "string",
                    "example": "Jean",
                    "description": "User first name"
                },
                "last_name": {
                    "type": "string",
                    "example": "Michel",
                    "description": "User last name"
                },
                "email": {
                    "type": "string",
                    "example": "jean.michel@example.com",
                    "description": "User email"
                },
                "language": {
                    "type": "string",
                    "example": "en",
                    "description": "User language"
                },
                "admin": {
                    "type": "boolean",
                    "example": false,
                    "description": "User admin flag"
                }
            }
        }
    }
}